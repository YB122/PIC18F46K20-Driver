

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Thu Aug 22 12:04:56 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F46K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1,inline
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1,inline
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    31                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    32                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    33                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    34                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    35                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    36                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    37   000000                     
    38                           ; Generated 21/07/2023 GMT
    39                           ; 
    40                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution. Publication is not required when
    54                           ;        this file is used in an embedded application.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC18F46K20 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72   000000                     
    73 ;; Function _INT0_APP_ISR is unused but had its address taken
    74   000000                     
    75 ;; Function _INT1_APP_ISR is unused but had its address taken
    76   000000                     
    77 ;; Function _INT2_APP_ISR is unused but had its address taken
    78   000000                     
    79 ;; Function _RB4_HIGH_Int_APP_ISR is unused but had its address taken
    80   000000                     
    81 ;; Function _RB4_LOW_Int_APP_ISR is unused but had its address taken
    82   000000                     
    83 ;; Function _RB5_HIGH_Int_APP_ISR is unused but had its address taken
    84   000000                     
    85 ;; Function _RB5_LOW_Int_APP_ISR is unused but had its address taken
    86   000000                     
    87 ;; Function _RB6_HIGH_Int_APP_ISR is unused but had its address taken
    88   000000                     
    89 ;; Function _RB6_LOW_Int_APP_ISR is unused but had its address taken
    90   000000                     
    91 ;; Function _RB7_HIGH_Int_APP_ISR is unused but had its address taken
    92   000000                     
    93 ;; Function _RB7_LOW_Int_APP_ISR is unused but had its address taken
    94   000000                     
    95                           	psect	idataCOMRAM
    96   0017E6                     __pidataCOMRAM:
    97                           	callstack 0
    98                           
    99                           ;initializer for _motor_1
   100   0017E6  00                 	db	0
   101   0017E7  08                 	db	8
   102                           
   103                           ;initializer for _RB7_Flag
   104   0017E8  01                 	db	1
   105                           
   106                           ;initializer for _RB6_Flag
   107   0017E9  01                 	db	1
   108                           
   109                           ;initializer for _RB5_Flag
   110   0017EA  01                 	db	1
   111                           
   112                           ;initializer for _RB4_Flag
   113   0017EB  01                 	db	1
   114                           
   115                           ;initializer for _servo_pin
   116   0017EC  02                 	db	2
   117                           
   118                           ;initializer for _led_green
   119   0017ED  23                 	db	35
   120                           
   121                           ;initializer for _led_red
   122   0017EE  33                 	db	51
   123                           
   124                           ;initializer for _led3
   125   0017EF  32                 	db	50
   126                           
   127                           ;initializer for _led2
   128   0017F0  22                 	db	34
   129                           
   130                           	psect	idataBANK0
   131   001426                     __pidataBANK0:
   132                           	callstack 0
   133                           
   134                           ;initializer for _port_register
   135   001426  80                 	db	128
   136   001427  0F                 	db	15
   137   001428  81                 	db	129
   138   001429  0F                 	db	15
   139   00142A  82                 	db	130
   140   00142B  0F                 	db	15
   141   00142C  83                 	db	131
   142   00142D  0F                 	db	15
   143   00142E  83                 	db	131
   144   00142F  0F                 	db	15
   145                           
   146                           ;initializer for _lat_register
   147   001430  89                 	db	137
   148   001431  0F                 	db	15
   149   001432  8A                 	db	138
   150   001433  0F                 	db	15
   151   001434  8B                 	db	139
   152   001435  0F                 	db	15
   153   001436  8C                 	db	140
   154   001437  0F                 	db	15
   155   001438  8D                 	db	141
   156   001439  0F                 	db	15
   157                           
   158                           ;initializer for _tris_register
   159   00143A  92                 	db	146
   160   00143B  0F                 	db	15
   161   00143C  93                 	db	147
   162   00143D  0F                 	db	15
   163   00143E  94                 	db	148
   164   00143F  0F                 	db	15
   165   001440  95                 	db	149
   166   001441  0F                 	db	15
   167   001442  96                 	db	150
   168   001443  0F                 	db	15
   169                           
   170                           ;initializer for _servo
   171   001444  02                 	db	2
   172   001445  0000               	dw	0
   173   001447  00                 	db	0
   174   001448  00                 	db	0
   175   001449  00                 	db	0
   176   00144A  01                 	db	1
   177   00144B  01                 	db	1
   178   00144C  01                 	db	1
   179   00144D  00                 	db	0
   180                           
   181                           ;initializer for _lcd_2
   182   00144E  32                 	db	50
   183   00144F  3A                 	db	58
   184   001450  03                 	db	3
   185   001451  0B                 	db	11
   186   001452  13                 	db	19
   187   001453  1B                 	db	27
   188   001454  23                 	db	35
   189   001455  2B                 	db	43
   190   001456  33                 	db	51
   191   001457  3B                 	db	59
   192                           
   193                           ;initializer for _adc_3
   194   001458  50                 	db	80
   195   001459  02                 	db	2
   196   00145A  05                 	db	5
   197   00145B  05                 	db	5
   198   00145C  01                 	db	1
   199   00145D  00                 	db	0
   200   00145E  00                 	db	0
   201   00145F  00                 	db	0
   202                           
   203                           ;initializer for _adc_2
   204   001460  48                 	db	72
   205   001461  01                 	db	1
   206   001462  05                 	db	5
   207   001463  05                 	db	5
   208   001464  01                 	db	1
   209   001465  00                 	db	0
   210   001466  00                 	db	0
   211   001467  00                 	db	0
   212                           
   213                           ;initializer for _adc_1
   214   001468  40                 	db	64
   215   001469  00                 	db	0
   216   00146A  05                 	db	5
   217   00146B  05                 	db	5
   218   00146C  01                 	db	1
   219   00146D  00                 	db	0
   220   00146E  00                 	db	0
   221   00146F  00                 	db	0
   222                           
   223                           ;initializer for _lm35_mc
   224   001470  40                 	db	64
   225   001471  00                 	db	0
   226   001472  05                 	db	5
   227   001473  05                 	db	5
   228   001474  01                 	db	1
   229   001475  00                 	db	0
   230   001476  00                 	db	0
   231   001477  00                 	db	0
   232                           
   233                           ;initializer for _KeyPad1
   234   001478  39                 	db	57
   235   001479  31                 	db	49
   236   00147A  29                 	db	41
   237   00147B  21                 	db	33
   238   00147C  59                 	db	89
   239   00147D  51                 	db	81
   240   00147E  49                 	db	73
   241   00147F  41                 	db	65
   242                           
   243                           ;initializer for _rb7_int_obj
   244   001480  00                 	db	0
   245   001481  00                 	db	0
   246   001482  00                 	db	0
   247   001483  00                 	db	0
   248   001484  79                 	db	121
   249   001485  01                 	db	1
   250                           
   251                           ;initializer for _rb6_int_obj
   252   001486  00                 	db	0
   253   001487  00                 	db	0
   254   001488  00                 	db	0
   255   001489  00                 	db	0
   256   00148A  71                 	db	113
   257   00148B  01                 	db	1
   258                           
   259                           ;initializer for _rb5_int_obj
   260   00148C  00                 	db	0
   261   00148D  00                 	db	0
   262   00148E  00                 	db	0
   263   00148F  00                 	db	0
   264   001490  69                 	db	105
   265   001491  01                 	db	1
   266                           
   267                           ;initializer for _rb4_int_obj
   268   001492  00                 	db	0
   269   001493  00                 	db	0
   270   001494  00                 	db	0
   271   001495  00                 	db	0
   272   001496  61                 	db	97
   273   001497  01                 	db	1
   274                           
   275                           ;initializer for _int2_obj
   276   001498  00                 	db	0
   277   001499  00                 	db	0
   278   00149A  51                 	db	81
   279   00149B  00                 	db	0
   280   00149C  02                 	db	2
   281   00149D  00                 	db	0
   282                           
   283                           ;initializer for _int1_obj
   284   00149E  00                 	db	0
   285   00149F  00                 	db	0
   286   0014A0  49                 	db	73
   287   0014A1  01                 	db	1
   288   0014A2  01                 	db	1
   289   0014A3  01                 	db	1
   290                           
   291                           ;initializer for _int0_obj
   292   0014A4  00                 	db	0
   293   0014A5  00                 	db	0
   294   0014A6  41                 	db	65
   295   0014A7  01                 	db	1
   296   0014A8  00                 	db	0
   297   0014A9  01                 	db	1
   298                           
   299                           ;initializer for _buuton_1
   300   0014AA  7A                 	db	122
   301   0014AB  00                 	db	0
   302   0014AC  00                 	db	0
   303                           
   304                           ;initializer for _mq2_pin
   305   0014AD  40                 	db	64
   306   0014AE  00                 	db	0
   307   0014AF  05                 	db	5
   308   0014B0  05                 	db	5
   309   0014B1  01                 	db	1
   310   0014B2  00                 	db	0
   311   0014B3  00                 	db	0
   312   0014B4  00                 	db	0
   313   0014B5  62                 	db	98
   314                           
   315                           ;initializer for _lcd_1
   316   0014B6  02                 	db	2
   317   0014B7  0A                 	db	10
   318   0014B8  12                 	db	18
   319   0014B9  1A                 	db	26
   320   0014BA  03                 	db	3
   321   0014BB  0B                 	db	11
   322                           
   323                           	psect	idataBANK1
   324   00167E                     __pidataBANK1:
   325                           	callstack 0
   326                           
   327                           ;initializer for _ccp_1_obj
   328   00167E  00                 	db	0
   329   00167F  00                 	db	0
   330   001680  00                 	db	0
   331   001681  00                 	db	0
   332   001682  00                 	db	0
   333   001683  00                 	db	0
   334   001684  4E20               	dw	20000
   335   001686  0000               	dw	0
   336   001688  0000               	dw	0
   337   00168A  0000               	dw	0
   338   00168C  01                 	db	1
   339   00168D  01                 	db	1
   340   00168E  00                 	db	0
   341   00168F  00                 	db	0
   342   001690  00                 	db	0
   343   001691  00                 	db	0
   344   001692  00                 	db	0
   345   001693  00                 	db	0
   346   001694  12                 	db	18
   347   001695  02                 	db	2
   348   001696  0C                 	db	12
   349   001697  00                 	db	0
   350   001698  00                 	db	0
   351                           
   352                           ;initializer for _eusart_pin
   353   001699  00                 	db	0
   354   00169A  00                 	db	0
   355   00169B  00                 	db	0
   356   00169C  2580               	dw	9600
   357   00169E  0000               	dw	0
   358   0016A0  0000               	dw	0
   359   0016A2  0000               	dw	0
   360   0016A4  03                 	db	3
   361   0016A5  00                 	db	0
   362   0016A6  00                 	db	0
   363   0016A7  00                 	db	0
   364   0016A8  00                 	db	0
   365   0016A9  00                 	db	0
   366   0016AA  00                 	db	0
   367   0016AB  00                 	db	0
   368   0016AC  00                 	db	0
   369   0016AD  00                 	db	0
   370   0016AE  00                 	db	0
   371                           
   372                           ;initializer for _i2c_p
   373   0016AF  0000               	dw	0
   374   0016B1  0000               	dw	0
   375   0016B3  0000               	dw	0
   376   0016B5  0000               	dw	0
   377   0016B7  06                 	db	6
   378   0016B8  62                 	db	98
   379   0016B9  02                 	db	2
   380   0016BA  00                 	db	0
   381   0016BB  00                 	db	0
   382   0016BC  00                 	db	0
   383   0016BD  00                 	db	0
   384   0016BE  00                 	db	0
   385   0016BF  00                 	db	0
   386   0016C0  00                 	db	0
   387   0016C1  00                 	db	0
   388                           
   389                           ;initializer for _US_pin
   390   0016C2  3A                 	db	58
   391   0016C3  72                 	db	114
   392   0016C4  0000               	dw	0
   393   0016C6  00                 	db	0
   394   0016C7  00                 	db	0
   395   0016C8  00                 	db	0
   396   0016C9  00                 	db	0
   397   0016CA  01                 	db	1
   398   0016CB  00                 	db	0
   399   0016CC  00                 	db	0
   400                           
   401                           	psect	smallconst
   402   001000                     __psmallconst:
   403                           	callstack 0
   404   001000  00                 	db	0
   405   001001                     _btn_values:
   406                           	callstack 0
   407   001001  37                 	db	55
   408   001002  38                 	db	56
   409   001003  39                 	db	57
   410   001004  2F                 	db	47
   411   001005  34                 	db	52
   412   001006  35                 	db	53
   413   001007  36                 	db	54
   414   001008  2A                 	db	42
   415   001009  31                 	db	49
   416   00100A  32                 	db	50
   417   00100B  33                 	db	51
   418   00100C  2B                 	db	43
   419   00100D  25                 	db	37
   420   00100E  30                 	db	48
   421   00100F  3D                 	db	61
   422   001010  2D                 	db	45
   423   001011                     __end_of_btn_values:
   424                           	callstack 0
   425   000000                     _TMR3L	set	4018
   426   000000                     _TMR3H	set	4019
   427   000000                     _TMR2	set	4044
   428   000000                     _TMR1L	set	4046
   429   000000                     _TMR1H	set	4047
   430   000000                     _T1CONbits	set	4045
   431   000000                     _TMR0L	set	4054
   432   000000                     _TMR0H	set	4055
   433   000000                     _INTCON2bits	set	4081
   434   000000                     _SSPBUF	set	4041
   435   000000                     _SSPSTATbits	set	4039
   436   000000                     _SSPCON2bits	set	4037
   437   000000                     _SSPADD	set	4040
   438   000000                     _SSPCON1bits	set	4038
   439   000000                     _SPBRGH	set	4016
   440   000000                     _SPBRG	set	4015
   441   000000                     _BAUDCONbits	set	4024
   442   000000                     _RCREG	set	4014
   443   000000                     _TXREG	set	4013
   444   000000                     _TXSTAbits	set	4012
   445   000000                     _RCSTAbits	set	4011
   446   000000                     _EECON2	set	4007
   447   000000                     _CCP2CONbits	set	4026
   448   000000                     _T2CONbits	set	4042
   449   000000                     _ADCON1bits	set	4033
   450   000000                     _ADRESL	set	4035
   451   000000                     _ADRESH	set	4036
   452   000000                     _RCONbits	set	4048
   453   000000                     _TRISB	set	3987
   454   000000                     _PR2	set	4043
   455   000000                     _TRISC	set	3988
   456   000000                     _TRISCbits	set	3988
   457   000000                     _PIE1bits	set	3997
   458   000000                     _ADCON2bits	set	4032
   459   000000                     _ADCON0bits	set	4034
   460   000000                     _PORTA	set	3968
   461   000000                     _LATA	set	3977
   462   000000                     _TRISA	set	3986
   463   000000                     _EECON1bits	set	4006
   464   000000                     _EEDATA	set	4008
   465   000000                     _EEADR	set	4009
   466   000000                     _EEADRH	set	4010
   467   000000                     _IPR2bits	set	4002
   468   000000                     _PIR2bits	set	4001
   469   000000                     _PIE2bits	set	4000
   470   000000                     _T3CONbits	set	4017
   471   000000                     _CCP1CONbits	set	4029
   472   000000                     _IPR1bits	set	3999
   473   000000                     _PIR1bits	set	3998
   474   000000                     _T0CONbits	set	4053
   475   000000                     _INTCON3bits	set	4080
   476   000000                     _INTCONbits	set	4082
   477   000000                     _CCPR1L	set	4030
   478   000000                     _CCPR2L	set	4027
   479   000000                     _TRISE	set	3990
   480   000000                     _TRISD	set	3989
   481   000000                     _LATE	set	3981
   482   000000                     _LATD	set	3980
   483   000000                     _LATC	set	3979
   484   000000                     _LATB	set	3978
   485   000000                     _PORTD	set	3971
   486   000000                     _PORTC	set	3970
   487   000000                     _PORTB	set	3969
   488   001011  25                 	db	37
   489   001012  6C                 	db	108	;'l'
   490   001013  6C                 	db	108	;'l'
   491   001014  69                 	db	105	;'i'
   492   001015  00                 	db	0
   493   001016                     STR_1:
   494   001016  25                 	db	37
   495   001017  69                 	db	105	;'i'
   496   001018  00                 	db	0
   497   001019  00                 	db	0	; dummy byte at the end
   498   000000                     
   499                           ; #config settings
   500                           
   501                           	psect	cinit
   502   0014BC                     __pcinit:
   503                           	callstack 0
   504   0014BC                     start_initialization:
   505                           	callstack 0
   506   0014BC                     __initialization:
   507                           	callstack 0
   508                           
   509                           ; Initialize objects allocated to BANK1 (79 bytes)
   510                           ; load TBLPTR registers with __pidataBANK1
   511   0014BC  0E7E               	movlw	low __pidataBANK1
   512   0014BE  6EF6               	movwf	tblptrl,c
   513   0014C0  0E16               	movlw	high __pidataBANK1
   514   0014C2  6EF7               	movwf	tblptrh,c
   515   0014C4  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   516   0014C6  6EF8               	movwf	tblptru,c
   517   0014C8  EE01  F000         	lfsr	0,__pdataBANK1
   518   0014CC  EE10 F04F          	lfsr	1,79
   519   0014D0                     copy_data0:
   520   0014D0  0009               	tblrd		*+
   521   0014D2  CFF5 FFEE          	movff	tablat,postinc0
   522   0014D6  50E5               	movf	postdec1,w,c
   523   0014D8  50E1               	movf	fsr1l,w,c
   524   0014DA  E1FA               	bnz	copy_data0
   525                           
   526                           ; Initialize objects allocated to BANK0 (150 bytes)
   527                           ; load TBLPTR registers with __pidataBANK0
   528   0014DC  0E26               	movlw	low __pidataBANK0
   529   0014DE  6EF6               	movwf	tblptrl,c
   530   0014E0  0E14               	movlw	high __pidataBANK0
   531   0014E2  6EF7               	movwf	tblptrh,c
   532   0014E4  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   533   0014E6  6EF8               	movwf	tblptru,c
   534   0014E8  EE00  F060         	lfsr	0,__pdataBANK0
   535   0014EC  EE10 F096          	lfsr	1,150
   536   0014F0                     copy_data1:
   537   0014F0  0009               	tblrd		*+
   538   0014F2  CFF5 FFEE          	movff	tablat,postinc0
   539   0014F6  50E5               	movf	postdec1,w,c
   540   0014F8  50E1               	movf	fsr1l,w,c
   541   0014FA  E1FA               	bnz	copy_data1
   542                           
   543                           ; Initialize objects allocated to COMRAM (11 bytes)
   544                           ; load TBLPTR registers with __pidataCOMRAM
   545   0014FC  0EE6               	movlw	low __pidataCOMRAM
   546   0014FE  6EF6               	movwf	tblptrl,c
   547   001500  0E17               	movlw	high __pidataCOMRAM
   548   001502  6EF7               	movwf	tblptrh,c
   549   001504  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   550   001506  6EF8               	movwf	tblptru,c
   551   001508  EE00  F052         	lfsr	0,__pdataCOMRAM
   552   00150C  EE10 F00B          	lfsr	1,11
   553   001510                     copy_data2:
   554   001510  0009               	tblrd		*+
   555   001512  CFF5 FFEE          	movff	tablat,postinc0
   556   001516  50E5               	movf	postdec1,w,c
   557   001518  50E1               	movf	fsr1l,w,c
   558   00151A  E1FA               	bnz	copy_data2
   559                           
   560                           ; Clear objects allocated to BANK0 (10 bytes)
   561   00151C  EE00  F0F6         	lfsr	0,__pbssBANK0
   562   001520  0E0A               	movlw	10
   563   001522                     clear_0:
   564   001522  6AEE               	clrf	postinc0,c
   565   001524  06E8               	decf	wreg,f,c
   566   001526  E1FD               	bnz	clear_0
   567                           
   568                           ; Clear objects allocated to COMRAM (64 bytes)
   569   001528  EE00  F001         	lfsr	0,__pbssCOMRAM
   570   00152C  0E40               	movlw	64
   571   00152E                     clear_1:
   572   00152E  6AEE               	clrf	postinc0,c
   573   001530  06E8               	decf	wreg,f,c
   574   001532  E1FD               	bnz	clear_1
   575   001534                     end_of_initialization:
   576                           	callstack 0
   577   001534                     __end_of__initialization:
   578                           	callstack 0
   579   001534  905D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   580   001536  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   581   001538  0100               	movlb	0
   582   00153A  EFED  F00B         	goto	_main	;jump to C main() function
   583                           
   584                           	psect	bssCOMRAM
   585   000001                     __pbssCOMRAM:
   586                           	callstack 0
   587   000001                     _timer3_preload:
   588                           	callstack 0
   589   000001                     	ds	2
   590   000003                     _TIMER3_INTERRUPT_HANDLER:
   591                           	callstack 0
   592   000003                     	ds	2
   593   000005                     _TIMER2_INTERRUPT_HANDLER:
   594                           	callstack 0
   595   000005                     	ds	2
   596   000007                     _timer1_preload:
   597                           	callstack 0
   598   000007                     	ds	2
   599   000009                     _TIMER1_INTERRUPT_HANDLER:
   600                           	callstack 0
   601   000009                     	ds	2
   602   00000B                     _timer0_preload:
   603                           	callstack 0
   604   00000B                     	ds	2
   605   00000D                     _TIMER0_INTERRUPT_HANDLER:
   606                           	callstack 0
   607   00000D                     	ds	2
   608   00000F                     _Interrupt_handler_RB7_LOW:
   609                           	callstack 0
   610   00000F                     	ds	2
   611   000011                     _Interrupt_handler_RB6_LOW:
   612                           	callstack 0
   613   000011                     	ds	2
   614   000013                     _Interrupt_handler_RB5_LOW:
   615                           	callstack 0
   616   000013                     	ds	2
   617   000015                     _Interrupt_handler_RB4_LOW:
   618                           	callstack 0
   619   000015                     	ds	2
   620   000017                     _Interrupt_handler_RB7_HIGH:
   621                           	callstack 0
   622   000017                     	ds	2
   623   000019                     _Interrupt_handler_RB6_HIGH:
   624                           	callstack 0
   625   000019                     	ds	2
   626   00001B                     _Interrupt_handler_RB5_HIGH:
   627                           	callstack 0
   628   00001B                     	ds	2
   629   00001D                     _Interrupt_handler_RB4_HIGH:
   630                           	callstack 0
   631   00001D                     	ds	2
   632   00001F                     _Interrupt_handler_INT2:
   633                           	callstack 0
   634   00001F                     	ds	2
   635   000021                     _Interrupt_handler_INT1:
   636                           	callstack 0
   637   000021                     	ds	2
   638   000023                     _Interrupt_handler_INT0:
   639                           	callstack 0
   640   000023                     	ds	2
   641   000025                     _I2C_Report_Receive_Overflow:
   642                           	callstack 0
   643   000025                     	ds	2
   644   000027                     _I2C_Report_Write_Collision:
   645                           	callstack 0
   646   000027                     	ds	2
   647   000029                     _I2C_INTERRUPT_HANDLER:
   648                           	callstack 0
   649   000029                     	ds	2
   650   00002B                     	ds	2
   651   00002D                     _EUSART_Rx_Interrupt_Handler:
   652                           	callstack 0
   653   00002D                     	ds	2
   654   00002F                     _EUSART_Tx_Interrupt_Handler:
   655                           	callstack 0
   656   00002F                     	ds	2
   657   000031                     _CCP2_INTERRUPT_HANDLER:
   658                           	callstack 0
   659   000031                     	ds	2
   660   000033                     _CCP1_INTERRUPT_HANDLER:
   661                           	callstack 0
   662   000033                     	ds	2
   663   000035                     _ADC_INTERRUPT_HANDLER:
   664                           	callstack 0
   665   000035                     	ds	2
   666   000037                     _ret:
   667                           	callstack 0
   668   000037                     	ds	1
   669   000038                     _timer2_preload:
   670                           	callstack 0
   671   000038                     	ds	1
   672   000039                     relay_turn_toggle@F3747:
   673                           	callstack 0
   674   000039                     	ds	1
   675   00003A                     relay_turn_off@F3742:
   676                           	callstack 0
   677   00003A                     	ds	1
   678   00003B                     relay_turn_on@F3737:
   679                           	callstack 0
   680   00003B                     	ds	1
   681   00003C                     relay_intialize@F3732:
   682                           	callstack 0
   683   00003C                     	ds	1
   684   00003D                     led_turn_toggle@F3747:
   685                           	callstack 0
   686   00003D                     	ds	1
   687   00003E                     led_turn_off@F3742:
   688                           	callstack 0
   689   00003E                     	ds	1
   690   00003F                     led_turn_on@F3737:
   691                           	callstack 0
   692   00003F                     	ds	1
   693   000040                     led_initialize@F3732:
   694                           	callstack 0
   695   000040                     	ds	1
   696                           
   697                           	psect	dataCOMRAM
   698   000052                     __pdataCOMRAM:
   699                           	callstack 0
   700   000052                     _motor_1:
   701                           	callstack 0
   702   000052                     	ds	2
   703   000054                     _RB7_Flag:
   704                           	callstack 0
   705   000054                     	ds	1
   706   000055                     _RB6_Flag:
   707                           	callstack 0
   708   000055                     	ds	1
   709   000056                     _RB5_Flag:
   710                           	callstack 0
   711   000056                     	ds	1
   712   000057                     _RB4_Flag:
   713                           	callstack 0
   714   000057                     	ds	1
   715   000058                     _servo_pin:
   716                           	callstack 0
   717   000058                     	ds	1
   718   000059                     _led_green:
   719                           	callstack 0
   720   000059                     	ds	1
   721   00005A                     _led_red:
   722                           	callstack 0
   723   00005A                     	ds	1
   724   00005B                     _led3:
   725                           	callstack 0
   726   00005B                     	ds	1
   727   00005C                     _led2:
   728                           	callstack 0
   729   00005C                     	ds	1
   730                           
   731                           	psect	bssBANK0
   732   0000F6                     __pbssBANK0:
   733                           	callstack 0
   734   0000F6                     _int_flag:
   735                           	callstack 0
   736   0000F6                     	ds	8
   737   0000FE                     	ds	2
   738                           
   739                           	psect	dataBANK0
   740   000060                     __pdataBANK0:
   741                           	callstack 0
   742   000060                     _port_register:
   743                           	callstack 0
   744   000060                     	ds	10
   745   00006A                     _lat_register:
   746                           	callstack 0
   747   00006A                     	ds	10
   748   000074                     _tris_register:
   749                           	callstack 0
   750   000074                     	ds	10
   751   00007E                     _servo:
   752                           	callstack 0
   753   00007E                     	ds	10
   754   000088                     _lcd_2:
   755                           	callstack 0
   756   000088                     	ds	10
   757   000092                     _adc_3:
   758                           	callstack 0
   759   000092                     	ds	8
   760   00009A                     _adc_2:
   761                           	callstack 0
   762   00009A                     	ds	8
   763   0000A2                     _adc_1:
   764                           	callstack 0
   765   0000A2                     	ds	8
   766   0000AA                     _lm35_mc:
   767                           	callstack 0
   768   0000AA                     	ds	8
   769   0000B2                     _KeyPad1:
   770                           	callstack 0
   771   0000B2                     	ds	8
   772   0000BA                     _rb7_int_obj:
   773                           	callstack 0
   774   0000BA                     	ds	6
   775   0000C0                     _rb6_int_obj:
   776                           	callstack 0
   777   0000C0                     	ds	6
   778   0000C6                     _rb5_int_obj:
   779                           	callstack 0
   780   0000C6                     	ds	6
   781   0000CC                     _rb4_int_obj:
   782                           	callstack 0
   783   0000CC                     	ds	6
   784   0000D2                     _int2_obj:
   785                           	callstack 0
   786   0000D2                     	ds	6
   787   0000D8                     _int1_obj:
   788                           	callstack 0
   789   0000D8                     	ds	6
   790   0000DE                     _int0_obj:
   791                           	callstack 0
   792   0000DE                     	ds	6
   793   0000E4                     _buuton_1:
   794                           	callstack 0
   795   0000E4                     	ds	3
   796   0000E7                     _mq2_pin:
   797                           	callstack 0
   798   0000E7                     	ds	9
   799   0000F0                     _lcd_1:
   800                           	callstack 0
   801   0000F0                     	ds	6
   802                           
   803                           	psect	dataBANK1
   804   000100                     __pdataBANK1:
   805                           	callstack 0
   806   000100                     _ccp_1_obj:
   807                           	callstack 0
   808   000100                     	ds	27
   809   00011B                     _eusart_pin:
   810                           	callstack 0
   811   00011B                     	ds	22
   812   000131                     _i2c_p:
   813                           	callstack 0
   814   000131                     	ds	19
   815   000144                     _US_pin:
   816                           	callstack 0
   817   000144                     	ds	11
   818                           
   819                           	psect	cstackBANK1
   820   00014F                     __pcstackBANK1:
   821                           	callstack 0
   822   00014F                     lcd_4_intialize@l_pins:
   823                           	callstack 0
   824                           
   825                           ; 1 bytes @ 0x0
   826   00014F                     	ds	1
   827   000150                     lcd_4_intialize@ret:
   828                           	callstack 0
   829                           
   830                           ; 1 bytes @ 0x1
   831   000150                     	ds	1
   832                           
   833                           	psect	cstackCOMRAM
   834   000041                     __pcstackCOMRAM:
   835                           	callstack 0
   836   000041                     ??_INTERRUPT_MANGER_LOW:
   837   000041                     
   838                           ; 2 bytes @ 0x0
   839   000041                     	ds	1
   840   000042                     select_result_format@_adc:
   841                           	callstack 0
   842   000042                     select_voltage@_adc:
   843                           	callstack 0
   844   000042                     gpio_pin_direction_intialize@_pin_config:
   845                           	callstack 0
   846   000042                     gpio_pin_write_logic@_pin_config:
   847                           	callstack 0
   848                           
   849                           ; 1 bytes @ 0x1
   850   000042                     	ds	1
   851   000043                     ??_gpio_pin_direction_intialize:
   852   000043                     gpio_pin_write_logic@logic:
   853                           	callstack 0
   854                           
   855                           ; 1 bytes @ 0x2
   856   000043                     	ds	1
   857   000044                     ??_gpio_pin_write_logic:
   858                           
   859                           ; 1 bytes @ 0x3
   860   000044                     	ds	4
   861   000048                     gpio_pin_direction_intialize@ret:
   862                           	callstack 0
   863                           
   864                           ; 1 bytes @ 0x7
   865   000048                     	ds	1
   866   000049                     ADC_initialize@_adc:
   867                           	callstack 0
   868   000049                     gpio_pin_write_logic@ret:
   869                           	callstack 0
   870                           
   871                           ; 1 bytes @ 0x8
   872   000049                     	ds	1
   873   00004A                     ??_ADC_initialize:
   874   00004A                     lcd_send_4bit@lcd:
   875                           	callstack 0
   876   00004A                     lcd_4bit_send_enable_signale@lcd:
   877                           	callstack 0
   878   00004A                     gpio_pin_intialize@_pin_config:
   879                           	callstack 0
   880                           
   881                           ; 1 bytes @ 0x9
   882   00004A                     	ds	1
   883   00004B                     ??_gpio_pin_intialize:
   884   00004B                     lcd_send_4bit@command:
   885                           	callstack 0
   886   00004B                     lcd_4bit_send_enable_signale@ret:
   887                           	callstack 0
   888   00004B                     ADC_initialize@ret:
   889                           	callstack 0
   890                           
   891                           ; 1 bytes @ 0xA
   892   00004B                     	ds	1
   893   00004C                     lcd_send_4bit@ret:
   894                           	callstack 0
   895   00004C                     MQ2_initialize@mq2_obj:
   896                           	callstack 0
   897   00004C                     gpio_pin_intialize@ret:
   898                           	callstack 0
   899                           
   900                           ; 1 bytes @ 0xB
   901   00004C                     	ds	1
   902   00004D                     lcd_4_send_command@lcd:
   903                           	callstack 0
   904   00004D                     MQ2_initialize@ret:
   905                           	callstack 0
   906                           
   907                           ; 1 bytes @ 0xC
   908   00004D                     	ds	1
   909   00004E                     lcd_4_send_command@command:
   910                           	callstack 0
   911                           
   912                           ; 1 bytes @ 0xD
   913   00004E                     	ds	1
   914   00004F                     lcd_4_send_command@ret:
   915                           	callstack 0
   916                           
   917                           ; 1 bytes @ 0xE
   918   00004F                     	ds	1
   919   000050                     lcd_4_intialize@lcd:
   920                           	callstack 0
   921                           
   922                           ; 1 bytes @ 0xF
   923   000050                     	ds	1
   924   000051                     ??_lcd_4_intialize:
   925                           
   926                           ; 1 bytes @ 0x10
   927   000051                     	ds	1
   928   000052                     
   929                           ; 1 bytes @ 0x11
   930 ;;
   931 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   932 ;;
   933 ;; *************** function _main *****************
   934 ;; Defined at:
   935 ;;		line 8 in file "application.c"
   936 ;; Parameters:    Size  Location     Type
   937 ;;		None
   938 ;; Auto vars:     Size  Location     Type
   939 ;;		None
   940 ;; Return value:  Size  Location     Type
   941 ;;                  2  1963[None  ] int 
   942 ;; Registers used:
   943 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   944 ;; Tracked objects:
   945 ;;		On entry : 0/0
   946 ;;		On exit  : 0/0
   947 ;;		Unchanged: 0/0
   948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   952 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   953 ;;Total ram usage:        0 bytes
   954 ;; Hardware stack levels required when called: 7
   955 ;; This function calls:
   956 ;;		_ecu_layer_initialize
   957 ;; This function is called by:
   958 ;;		Startup code after reset
   959 ;; This function uses a non-reentrant model
   960 ;;
   961                           
   962                           	psect	text0
   963   0017DA                     __ptext0:
   964                           	callstack 0
   965   0017DA                     _main:
   966                           	callstack 24
   967   0017DA                     
   968                           ;application.c: 10:     ecu_layer_initialize();
   969   0017DA  ECE4  F00B         	call	_ecu_layer_initialize	;wreg free
   970   0017DE                     l1964:
   971   0017DE  EFEF  F00B         	goto	l1964
   972   0017E2  EF13  F000         	goto	start
   973   0017E6                     __end_of_main:
   974                           	callstack 0
   975                           
   976 ;; *************** function _ecu_layer_initialize *****************
   977 ;; Defined at:
   978 ;;		line 441 in file "ECU_Layer/ecu_layer_initialize.c"
   979 ;; Parameters:    Size  Location     Type
   980 ;;		None
   981 ;; Auto vars:     Size  Location     Type
   982 ;;  ret             1    0        unsigned char 
   983 ;; Return value:  Size  Location     Type
   984 ;;                  1    wreg      void 
   985 ;; Registers used:
   986 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   987 ;; Tracked objects:
   988 ;;		On entry : 0/0
   989 ;;		On exit  : 0/0
   990 ;;		Unchanged: 0/0
   991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   995 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   996 ;;Total ram usage:        0 bytes
   997 ;; Hardware stack levels used: 1
   998 ;; Hardware stack levels required when called: 6
   999 ;; This function calls:
  1000 ;;		_MQ2_initialize
  1001 ;;		_lcd_4_intialize
  1002 ;; This function is called by:
  1003 ;;		_main
  1004 ;; This function uses a non-reentrant model
  1005 ;;
  1006                           
  1007                           	psect	text1
  1008   0017C8                     __ptext1:
  1009                           	callstack 0
  1010   0017C8                     _ecu_layer_initialize:
  1011                           	callstack 24
  1012   0017C8  0EF0               	movlw	low _lcd_1
  1013   0017CA  6E50               	movwf	lcd_4_intialize@lcd^0,c
  1014   0017CC  EC28  F009         	call	_lcd_4_intialize	;wreg free
  1015   0017D0  0EE7               	movlw	low _mq2_pin
  1016   0017D2  6E4C               	movwf	MQ2_initialize@mq2_obj^0,c
  1017   0017D4  ECC9  F00B         	call	_MQ2_initialize	;wreg free
  1018   0017D8  0012               	return		;funcret
  1019   0017DA                     __end_of_ecu_layer_initialize:
  1020                           	callstack 0
  1021                           
  1022 ;; *************** function _lcd_4_intialize *****************
  1023 ;; Defined at:
  1024 ;;		line 13 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1025 ;; Parameters:    Size  Location     Type
  1026 ;;  lcd             1   15[COMRAM] PTR struct .
  1027 ;;		 -> lcd_1(6), 
  1028 ;; Auto vars:     Size  Location     Type
  1029 ;;  ret             1    1[BANK1 ] unsigned char 
  1030 ;;  l_pins          1    0[BANK1 ] unsigned char 
  1031 ;; Return value:  Size  Location     Type
  1032 ;;                  1    wreg      unsigned char 
  1033 ;; Registers used:
  1034 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1035 ;; Tracked objects:
  1036 ;;		On entry : 0/0
  1037 ;;		On exit  : 0/0
  1038 ;;		Unchanged: 0/0
  1039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1040 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1041 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1042 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1043 ;;      Totals:         2       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1044 ;;Total ram usage:        4 bytes
  1045 ;; Hardware stack levels used: 1
  1046 ;; Hardware stack levels required when called: 5
  1047 ;; This function calls:
  1048 ;;		_gpio_pin_intialize
  1049 ;;		_lcd_4_send_command
  1050 ;; This function is called by:
  1051 ;;		_ecu_layer_initialize
  1052 ;; This function uses a non-reentrant model
  1053 ;;
  1054                           
  1055                           	psect	text2
  1056   001250                     __ptext2:
  1057                           	callstack 0
  1058   001250                     _lcd_4_intialize:
  1059                           	callstack 24
  1060   001250                     
  1061                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 16:     uint8 l_pins = 0 ;
  1062   001250  0E00               	movlw	0
  1063   001252  0101               	movlb	1	; () banked
  1064   001254  6F4F               	movwf	lcd_4_intialize@l_pins& (0+255),b
  1065                           
  1066                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 17:     if(((void*)0) == lcd)
  1067   001256  5050               	movf	lcd_4_intialize@lcd^0,w,c
  1068   001258  A4D8               	btfss	status,2,c
  1069   00125A  EF31  F009         	goto	u6341
  1070   00125E  EF33  F009         	goto	u6340
  1071   001262                     u6341:
  1072   001262  EF37  F009         	goto	l7746
  1073   001266                     u6340:
  1074   001266                     
  1075                           ; BSR set to: 1
  1076                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 18:         ret = (std_ReturneType)0x00 ;
  1077   001266  0E00               	movlw	0
  1078   001268  6F50               	movwf	lcd_4_intialize@ret& (0+255),b
  1079   00126A  EF9E  F009         	goto	l7782
  1080   00126E                     l7746:
  1081                           
  1082                           ; BSR set to: 1
  1083                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 20:     {;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 21:        
      +                           ret = gpio_pin_intialize(&(lcd->lcd_rs));
  1084   00126E  C050  F04A         	movff	lcd_4_intialize@lcd,gpio_pin_intialize@_pin_config
  1085   001272  ECD8  F00A         	call	_gpio_pin_intialize	;wreg free
  1086   001276  0101               	movlb	1	; () banked
  1087   001278  6F50               	movwf	lcd_4_intialize@ret& (0+255),b
  1088                           
  1089                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 22:         ret = gpio_pin_intialize(&(lcd->lcd_en));
  1090   00127A  2850               	incf	lcd_4_intialize@lcd^0,w,c
  1091   00127C  6E4A               	movwf	gpio_pin_intialize@_pin_config^0,c
  1092   00127E  ECD8  F00A         	call	_gpio_pin_intialize	;wreg free
  1093   001282  0101               	movlb	1	; () banked
  1094   001284  6F50               	movwf	lcd_4_intialize@ret& (0+255),b
  1095   001286                     
  1096                           ; BSR set to: 1
  1097                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 23:         for(l_pins = 0 ; l_pins < 4 ; l_pins++)
  1098   001286  0E00               	movlw	0
  1099   001288  6F4F               	movwf	lcd_4_intialize@l_pins& (0+255),b
  1100   00128A                     l7754:
  1101                           
  1102                           ; BSR set to: 1
  1103   00128A  5050               	movf	lcd_4_intialize@lcd^0,w,c
  1104   00128C  254F               	addwf	lcd_4_intialize@l_pins& (0+255),w,b
  1105   00128E  0F02               	addlw	2
  1106   001290  6E4A               	movwf	gpio_pin_intialize@_pin_config^0,c
  1107   001292  ECD8  F00A         	call	_gpio_pin_intialize	;wreg free
  1108   001296                     
  1109                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 26:         }
  1110   001296  0101               	movlb	1	; () banked
  1111   001298  2B4F               	incf	lcd_4_intialize@l_pins& (0+255),f,b
  1112   00129A                     
  1113                           ; BSR set to: 1
  1114   00129A  0E03               	movlw	3
  1115   00129C  654F               	cpfsgt	lcd_4_intialize@l_pins& (0+255),b
  1116   00129E  EF53  F009         	goto	u6351
  1117   0012A2  EF55  F009         	goto	u6350
  1118   0012A6                     u6351:
  1119   0012A6  EF45  F009         	goto	l7754
  1120   0012AA                     u6350:
  1121   0012AA                     
  1122                           ; BSR set to: 1
  1123                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 27:         _delay((unsigned long)((20)*(8000000/4000.
      +                          0)));
  1124   0012AA  0E34               	movlw	52
  1125   0012AC  6E51               	movwf	??_lcd_4_intialize^0,c
  1126   0012AE  0EF2               	movlw	242
  1127   0012B0                     u7867:
  1128   0012B0  2EE8               	decfsz	wreg,f,c
  1129   0012B2  D7FE               	bra	u7867
  1130   0012B4  2E51               	decfsz	??_lcd_4_intialize^0,f,c
  1131   0012B6  D7FC               	bra	u7867
  1132   0012B8  C050  F04D         	movff	lcd_4_intialize@lcd,lcd_4_send_command@lcd
  1133   0012BC  0E38               	movlw	56
  1134   0012BE  6E4E               	movwf	lcd_4_send_command@command^0,c
  1135   0012C0  EC11  F00B         	call	_lcd_4_send_command	;wreg free
  1136   0012C4                     
  1137                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 29:         _delay((unsigned long)((5)*(8000000/4000.0
      +                          )));
  1138   0012C4  0E0D               	movlw	13
  1139   0012C6  6E51               	movwf	??_lcd_4_intialize^0,c
  1140   0012C8  0EFC               	movlw	252
  1141   0012CA                     u7877:
  1142   0012CA  2EE8               	decfsz	wreg,f,c
  1143   0012CC  D7FE               	bra	u7877
  1144   0012CE  2E51               	decfsz	??_lcd_4_intialize^0,f,c
  1145   0012D0  D7FC               	bra	u7877
  1146   0012D2  C050  F04D         	movff	lcd_4_intialize@lcd,lcd_4_send_command@lcd
  1147   0012D6  0E38               	movlw	56
  1148   0012D8  6E4E               	movwf	lcd_4_send_command@command^0,c
  1149   0012DA  EC11  F00B         	call	_lcd_4_send_command	;wreg free
  1150   0012DE                     
  1151                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 31:         _delay((unsigned long)((150)*(8000000/4000
      +                          000.0)));
  1152   0012DE  0E64               	movlw	100
  1153   0012E0                     u7887:
  1154   0012E0  2EE8               	decfsz	wreg,f,c
  1155   0012E2  D7FE               	bra	u7887
  1156   0012E4  C050  F04D         	movff	lcd_4_intialize@lcd,lcd_4_send_command@lcd
  1157   0012E8  0E38               	movlw	56
  1158   0012EA  6E4E               	movwf	lcd_4_send_command@command^0,c
  1159   0012EC  EC11  F00B         	call	_lcd_4_send_command	;wreg free
  1160   0012F0  C050  F04D         	movff	lcd_4_intialize@lcd,lcd_4_send_command@lcd
  1161   0012F4  0E01               	movlw	1
  1162   0012F6  6E4E               	movwf	lcd_4_send_command@command^0,c
  1163   0012F8  EC11  F00B         	call	_lcd_4_send_command	;wreg free
  1164   0012FC  C050  F04D         	movff	lcd_4_intialize@lcd,lcd_4_send_command@lcd
  1165   001300  0E02               	movlw	2
  1166   001302  6E4E               	movwf	lcd_4_send_command@command^0,c
  1167   001304  EC11  F00B         	call	_lcd_4_send_command	;wreg free
  1168   001308  C050  F04D         	movff	lcd_4_intialize@lcd,lcd_4_send_command@lcd
  1169   00130C  0E06               	movlw	6
  1170   00130E  6E4E               	movwf	lcd_4_send_command@command^0,c
  1171   001310  EC11  F00B         	call	_lcd_4_send_command	;wreg free
  1172   001314  C050  F04D         	movff	lcd_4_intialize@lcd,lcd_4_send_command@lcd
  1173   001318  0E0C               	movlw	12
  1174   00131A  6E4E               	movwf	lcd_4_send_command@command^0,c
  1175   00131C  EC11  F00B         	call	_lcd_4_send_command	;wreg free
  1176   001320  C050  F04D         	movff	lcd_4_intialize@lcd,lcd_4_send_command@lcd
  1177   001324  0E28               	movlw	40
  1178   001326  6E4E               	movwf	lcd_4_send_command@command^0,c
  1179   001328  EC11  F00B         	call	_lcd_4_send_command	;wreg free
  1180   00132C                     
  1181                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 38:         ret = lcd_4_send_command(lcd , 0X80);
  1182   00132C  C050  F04D         	movff	lcd_4_intialize@lcd,lcd_4_send_command@lcd
  1183   001330  0E80               	movlw	128
  1184   001332  6E4E               	movwf	lcd_4_send_command@command^0,c
  1185   001334  EC11  F00B         	call	_lcd_4_send_command	;wreg free
  1186   001338  0101               	movlb	1	; () banked
  1187   00133A  6F50               	movwf	lcd_4_intialize@ret& (0+255),b
  1188   00133C                     l7782:
  1189                           
  1190                           ; BSR set to: 1
  1191                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 40:     return ret ;
  1192   00133C  5150               	movf	lcd_4_intialize@ret& (0+255),w,b
  1193   00133E                     
  1194                           ; BSR set to: 1
  1195   00133E  0012               	return		;funcret
  1196   001340                     __end_of_lcd_4_intialize:
  1197                           	callstack 0
  1198                           
  1199 ;; *************** function _lcd_4_send_command *****************
  1200 ;; Defined at:
  1201 ;;		line 45 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1202 ;; Parameters:    Size  Location     Type
  1203 ;;  lcd             1   12[COMRAM] PTR struct .
  1204 ;;		 -> lcd_1(6), 
  1205 ;;  command         1   13[COMRAM] unsigned char 
  1206 ;; Auto vars:     Size  Location     Type
  1207 ;;  ret             1   14[COMRAM] unsigned char 
  1208 ;; Return value:  Size  Location     Type
  1209 ;;                  1    wreg      unsigned char 
  1210 ;; Registers used:
  1211 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1212 ;; Tracked objects:
  1213 ;;		On entry : 0/0
  1214 ;;		On exit  : 0/0
  1215 ;;		Unchanged: 0/0
  1216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1217 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1218 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1220 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1221 ;;Total ram usage:        3 bytes
  1222 ;; Hardware stack levels used: 1
  1223 ;; Hardware stack levels required when called: 4
  1224 ;; This function calls:
  1225 ;;		_gpio_pin_write_logic
  1226 ;;		_lcd_4bit_send_enable_signale
  1227 ;;		_lcd_send_4bit
  1228 ;; This function is called by:
  1229 ;;		_lcd_4_intialize
  1230 ;;		_lcd_4_send_custome_char
  1231 ;;		_lcd_4bit_set_cursor
  1232 ;; This function uses a non-reentrant model
  1233 ;;
  1234                           
  1235                           	psect	text3
  1236   001622                     __ptext3:
  1237                           	callstack 0
  1238   001622                     _lcd_4_send_command:
  1239                           	callstack 24
  1240   001622                     
  1241                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 48:     if(((void*)0) == lcd)
  1242   001622  504D               	movf	lcd_4_send_command@lcd^0,w,c
  1243   001624  A4D8               	btfss	status,2,c
  1244   001626  EF17  F00B         	goto	u6301
  1245   00162A  EF19  F00B         	goto	u6300
  1246   00162E                     u6301:
  1247   00162E  EF1D  F00B         	goto	l7702
  1248   001632                     u6300:
  1249   001632                     
  1250                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 49:         ret = (std_ReturneType)0x00 ;
  1251   001632  0E00               	movlw	0
  1252   001634  6E4F               	movwf	lcd_4_send_command@ret^0,c
  1253   001636  EF3D  F00B         	goto	l7704
  1254   00163A                     l7702:
  1255                           
  1256                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 51:     {;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 52:        
      +                           ret = gpio_pin_write_logic(&(lcd->lcd_rs) , LOW);
  1257   00163A  C04D  F042         	movff	lcd_4_send_command@lcd,gpio_pin_write_logic@_pin_config
  1258   00163E  0E00               	movlw	0
  1259   001640  6E43               	movwf	gpio_pin_write_logic@logic^0,c
  1260   001642  ECA0  F008         	call	_gpio_pin_write_logic	;wreg free
  1261   001646  6E4F               	movwf	lcd_4_send_command@ret^0,c
  1262                           
  1263                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 53:         ret = lcd_send_4bit(lcd , command >> 4);
  1264   001648  C04D  F04A         	movff	lcd_4_send_command@lcd,lcd_send_4bit@lcd
  1265   00164C  384E               	swapf	lcd_4_send_command@command^0,w,c
  1266   00164E  0B0F               	andlw	15
  1267   001650  6E4B               	movwf	lcd_send_4bit@command^0,c
  1268   001652  EC9F  F00A         	call	_lcd_send_4bit	;wreg free
  1269   001656  6E4F               	movwf	lcd_4_send_command@ret^0,c
  1270                           
  1271                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 54:         ret = lcd_4bit_send_enable_signale(lcd);
  1272   001658  C04D  F04A         	movff	lcd_4_send_command@lcd,lcd_4bit_send_enable_signale@lcd
  1273   00165C  ECAA  F00B         	call	_lcd_4bit_send_enable_signale	;wreg free
  1274   001660  6E4F               	movwf	lcd_4_send_command@ret^0,c
  1275                           
  1276                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 55:         ret = lcd_send_4bit(lcd , command);
  1277   001662  C04D  F04A         	movff	lcd_4_send_command@lcd,lcd_send_4bit@lcd
  1278   001666  C04E  F04B         	movff	lcd_4_send_command@command,lcd_send_4bit@command
  1279   00166A  EC9F  F00A         	call	_lcd_send_4bit	;wreg free
  1280   00166E  6E4F               	movwf	lcd_4_send_command@ret^0,c
  1281                           
  1282                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 56:         ret = lcd_4bit_send_enable_signale(lcd);
  1283   001670  C04D  F04A         	movff	lcd_4_send_command@lcd,lcd_4bit_send_enable_signale@lcd
  1284   001674  ECAA  F00B         	call	_lcd_4bit_send_enable_signale	;wreg free
  1285   001678  6E4F               	movwf	lcd_4_send_command@ret^0,c
  1286   00167A                     l7704:
  1287                           
  1288                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 58:     return ret ;
  1289   00167A  504F               	movf	lcd_4_send_command@ret^0,w,c
  1290   00167C  0012               	return		;funcret
  1291   00167E                     __end_of_lcd_4_send_command:
  1292                           	callstack 0
  1293                           
  1294 ;; *************** function _lcd_send_4bit *****************
  1295 ;; Defined at:
  1296 ;;		line 366 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1297 ;; Parameters:    Size  Location     Type
  1298 ;;  lcd             1    9[COMRAM] PTR struct .
  1299 ;;		 -> lcd_1(6), 
  1300 ;;  command         1   10[COMRAM] unsigned char 
  1301 ;; Auto vars:     Size  Location     Type
  1302 ;;  ret             1   11[COMRAM] unsigned char 
  1303 ;; Return value:  Size  Location     Type
  1304 ;;                  1    wreg      unsigned char 
  1305 ;; Registers used:
  1306 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1307 ;; Tracked objects:
  1308 ;;		On entry : 0/0
  1309 ;;		On exit  : 0/0
  1310 ;;		Unchanged: 0/0
  1311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1312 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1313 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1315 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1316 ;;Total ram usage:        3 bytes
  1317 ;; Hardware stack levels used: 1
  1318 ;; Hardware stack levels required when called: 3
  1319 ;; This function calls:
  1320 ;;		_gpio_pin_write_logic
  1321 ;; This function is called by:
  1322 ;;		_lcd_4_send_command
  1323 ;;		_lcd_4_send_char_data
  1324 ;; This function uses a non-reentrant model
  1325 ;;
  1326                           
  1327                           	psect	text4
  1328   00153E                     __ptext4:
  1329                           	callstack 0
  1330   00153E                     _lcd_send_4bit:
  1331                           	callstack 24
  1332   00153E                     
  1333                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 369:     if(((void*)0) == lcd)
  1334   00153E  504A               	movf	lcd_send_4bit@lcd^0,w,c
  1335   001540  A4D8               	btfss	status,2,c
  1336   001542  EFA5  F00A         	goto	u6251
  1337   001546  EFA7  F00A         	goto	u6250
  1338   00154A                     u6251:
  1339   00154A  EFAB  F00A         	goto	l7660
  1340   00154E                     u6250:
  1341   00154E                     
  1342                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 370:         ret = (std_ReturneType)0x00 ;
  1343   00154E  0E00               	movlw	0
  1344   001550  6E4C               	movwf	lcd_send_4bit@ret^0,c
  1345   001552  EFD6  F00A         	goto	l7664
  1346   001556                     l7660:
  1347                           
  1348                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 372:     {;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 373:      
      +                             ret = gpio_pin_write_logic(&(lcd->lcd_data[0]) , (command >> 0) & (uint8)0X01);
  1349   001556  504A               	movf	lcd_send_4bit@lcd^0,w,c
  1350   001558  0F02               	addlw	2
  1351   00155A  6E42               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1352   00155C  504B               	movf	lcd_send_4bit@command^0,w,c
  1353   00155E  0B01               	andlw	1
  1354   001560  6E43               	movwf	gpio_pin_write_logic@logic^0,c
  1355   001562  ECA0  F008         	call	_gpio_pin_write_logic	;wreg free
  1356   001566  6E4C               	movwf	lcd_send_4bit@ret^0,c
  1357                           
  1358                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 374:         ret = gpio_pin_write_logic(&(lcd->lcd_dat
      +                          a[1]) , (command >> 1) & (uint8)0X01);
  1359   001568  504A               	movf	lcd_send_4bit@lcd^0,w,c
  1360   00156A  0F03               	addlw	3
  1361   00156C  6E42               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1362   00156E  90D8               	bcf	status,0,c
  1363   001570  304B               	rrcf	lcd_send_4bit@command^0,w,c
  1364   001572  0B01               	andlw	1
  1365   001574  6E43               	movwf	gpio_pin_write_logic@logic^0,c
  1366   001576  ECA0  F008         	call	_gpio_pin_write_logic	;wreg free
  1367   00157A  6E4C               	movwf	lcd_send_4bit@ret^0,c
  1368                           
  1369                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 375:         ret = gpio_pin_write_logic(&(lcd->lcd_dat
      +                          a[2]) , (command >> 2) & (uint8)0X01);
  1370   00157C  504A               	movf	lcd_send_4bit@lcd^0,w,c
  1371   00157E  0F04               	addlw	4
  1372   001580  6E42               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1373   001582  404B               	rrncf	lcd_send_4bit@command^0,w,c
  1374   001584  42E8               	rrncf	wreg,f,c
  1375   001586  0B3F               	andlw	63
  1376   001588  0B01               	andlw	1
  1377   00158A  6E43               	movwf	gpio_pin_write_logic@logic^0,c
  1378   00158C  ECA0  F008         	call	_gpio_pin_write_logic	;wreg free
  1379   001590  6E4C               	movwf	lcd_send_4bit@ret^0,c
  1380                           
  1381                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 376:         ret = gpio_pin_write_logic(&(lcd->lcd_dat
      +                          a[3]) , (command >> 3) & (uint8)0X01);
  1382   001592  504A               	movf	lcd_send_4bit@lcd^0,w,c
  1383   001594  0F05               	addlw	5
  1384   001596  6E42               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1385   001598  384B               	swapf	lcd_send_4bit@command^0,w,c
  1386   00159A  46E8               	rlncf	wreg,f,c
  1387   00159C  0B1F               	andlw	31
  1388   00159E  0B01               	andlw	1
  1389   0015A0  6E43               	movwf	gpio_pin_write_logic@logic^0,c
  1390   0015A2  ECA0  F008         	call	_gpio_pin_write_logic	;wreg free
  1391   0015A6  6E4C               	movwf	lcd_send_4bit@ret^0,c
  1392   0015A8                     
  1393                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 377:         ret = (std_ReturneType)0x01 ;
  1394   0015A8  0E01               	movlw	1
  1395   0015AA  6E4C               	movwf	lcd_send_4bit@ret^0,c
  1396   0015AC                     l7664:
  1397                           
  1398                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 379:     return ret ;
  1399   0015AC  504C               	movf	lcd_send_4bit@ret^0,w,c
  1400   0015AE  0012               	return		;funcret
  1401   0015B0                     __end_of_lcd_send_4bit:
  1402                           	callstack 0
  1403                           
  1404 ;; *************** function _lcd_4bit_send_enable_signale *****************
  1405 ;; Defined at:
  1406 ;;		line 384 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1407 ;; Parameters:    Size  Location     Type
  1408 ;;  lcd             1    9[COMRAM] PTR struct .
  1409 ;;		 -> lcd_1(6), 
  1410 ;; Auto vars:     Size  Location     Type
  1411 ;;  ret             1   10[COMRAM] unsigned char 
  1412 ;; Return value:  Size  Location     Type
  1413 ;;                  1    wreg      unsigned char 
  1414 ;; Registers used:
  1415 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1416 ;; Tracked objects:
  1417 ;;		On entry : 0/0
  1418 ;;		On exit  : 0/0
  1419 ;;		Unchanged: 0/0
  1420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1421 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1422 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1424 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1425 ;;Total ram usage:        2 bytes
  1426 ;; Hardware stack levels used: 1
  1427 ;; Hardware stack levels required when called: 3
  1428 ;; This function calls:
  1429 ;;		_gpio_pin_write_logic
  1430 ;; This function is called by:
  1431 ;;		_lcd_4_send_command
  1432 ;;		_lcd_4_send_char_data
  1433 ;; This function uses a non-reentrant model
  1434 ;;
  1435                           
  1436                           	psect	text5
  1437   001754                     __ptext5:
  1438                           	callstack 0
  1439   001754                     _lcd_4bit_send_enable_signale:
  1440                           	callstack 24
  1441   001754                     
  1442                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 387:     if(((void*)0) == lcd)
  1443   001754  504A               	movf	lcd_4bit_send_enable_signale@lcd^0,w,c
  1444   001756  A4D8               	btfss	status,2,c
  1445   001758  EFB0  F00B         	goto	u6261
  1446   00175C  EFB2  F00B         	goto	u6260
  1447   001760                     u6261:
  1448   001760  EFB6  F00B         	goto	l7672
  1449   001764                     u6260:
  1450   001764                     
  1451                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 388:         ret = (std_ReturneType)0x00 ;
  1452   001764  0E00               	movlw	0
  1453   001766  6E4B               	movwf	lcd_4bit_send_enable_signale@ret^0,c
  1454   001768  EFC7  F00B         	goto	l7678
  1455   00176C                     l7672:
  1456   00176C  284A               	incf	lcd_4bit_send_enable_signale@lcd^0,w,c
  1457   00176E  6E42               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1458   001770  0E01               	movlw	1
  1459   001772  6E43               	movwf	gpio_pin_write_logic@logic^0,c
  1460   001774  ECA0  F008         	call	_gpio_pin_write_logic	;wreg free
  1461   001778                     
  1462                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 392:         _delay((unsigned long)((5)*(8000000/40000
      +                          00.0)));
  1463   001778  0E03               	movlw	3
  1464   00177A                     u7897:
  1465   00177A  2EE8               	decfsz	wreg,f,c
  1466   00177C  D7FE               	bra	u7897
  1467   00177E  0000               	nop	
  1468   001780                     
  1469                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 393:         ret = gpio_pin_write_logic(&(lcd->lcd_en)
      +                           , LOW);
  1470   001780  284A               	incf	lcd_4bit_send_enable_signale@lcd^0,w,c
  1471   001782  6E42               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1472   001784  0E00               	movlw	0
  1473   001786  6E43               	movwf	gpio_pin_write_logic@logic^0,c
  1474   001788  ECA0  F008         	call	_gpio_pin_write_logic	;wreg free
  1475   00178C  6E4B               	movwf	lcd_4bit_send_enable_signale@ret^0,c
  1476   00178E                     l7678:
  1477                           
  1478                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 395:     return ret ;
  1479   00178E  504B               	movf	lcd_4bit_send_enable_signale@ret^0,w,c
  1480   001790  0012               	return		;funcret
  1481   001792                     __end_of_lcd_4bit_send_enable_signale:
  1482                           	callstack 0
  1483                           
  1484 ;; *************** function _gpio_pin_intialize *****************
  1485 ;; Defined at:
  1486 ;;		line 126 in file "MCAL_Layer/GPIO/hal_gpio.c"
  1487 ;; Parameters:    Size  Location     Type
  1488 ;;  _pin_config     1    9[COMRAM] PTR const struct .
  1489 ;;		 -> lcd_1$lcd_data(4), lcd_1$lcd_en(1), lcd_1$lcd_rs(1), lcd_1(6), 
  1490 ;; Auto vars:     Size  Location     Type
  1491 ;;  ret             1   11[COMRAM] unsigned char 
  1492 ;; Return value:  Size  Location     Type
  1493 ;;                  1    wreg      unsigned char 
  1494 ;; Registers used:
  1495 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1496 ;; Tracked objects:
  1497 ;;		On entry : 0/0
  1498 ;;		On exit  : 0/0
  1499 ;;		Unchanged: 0/0
  1500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1501 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1502 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1503 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1504 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1505 ;;Total ram usage:        3 bytes
  1506 ;; Hardware stack levels used: 1
  1507 ;; Hardware stack levels required when called: 3
  1508 ;; This function calls:
  1509 ;;		_gpio_pin_direction_intialize
  1510 ;;		_gpio_pin_write_logic
  1511 ;; This function is called by:
  1512 ;;		_lcd_4_intialize
  1513 ;;		_lcd_8_intialize
  1514 ;;		_keypad_intialize
  1515 ;;		_CCP_initialize
  1516 ;; This function uses a non-reentrant model
  1517 ;;
  1518                           
  1519                           	psect	text6
  1520   0015B0                     __ptext6:
  1521                           	callstack 0
  1522   0015B0                     _gpio_pin_intialize:
  1523                           	callstack 25
  1524   0015B0                     
  1525                           ;MCAL_Layer/GPIO/hal_gpio.c: 129:     if((_pin_config == ((void*)0)) || (_pin_config->pi
      +                          n > 8 -1))
  1526   0015B0  504A               	movf	gpio_pin_intialize@_pin_config^0,w,c
  1527   0015B2  B4D8               	btfsc	status,2,c
  1528   0015B4  EFDE  F00A         	goto	u6271
  1529   0015B8  EFE0  F00A         	goto	u6270
  1530   0015BC                     u6271:
  1531   0015BC  EFF0  F00A         	goto	l7686
  1532   0015C0                     u6270:
  1533   0015C0  504A               	movf	gpio_pin_intialize@_pin_config^0,w,c
  1534   0015C2  6ED9               	movwf	fsr2l,c
  1535   0015C4  6ADA               	clrf	fsr2h,c
  1536   0015C6  30DF               	rrcf	223,w,c
  1537   0015C8  32E8               	rrcf	wreg,f,c
  1538   0015CA  32E8               	rrcf	wreg,f,c
  1539   0015CC  0B07               	andlw	7
  1540   0015CE  6E4B               	movwf	??_gpio_pin_intialize^0,c
  1541   0015D0  0E07               	movlw	7
  1542   0015D2  644B               	cpfsgt	??_gpio_pin_intialize^0,c
  1543   0015D4  EFEE  F00A         	goto	u6281
  1544   0015D8  EFF0  F00A         	goto	u6280
  1545   0015DC                     u6281:
  1546   0015DC  EFF4  F00A         	goto	l7688
  1547   0015E0                     u6280:
  1548   0015E0                     l7686:
  1549                           
  1550                           ;MCAL_Layer/GPIO/hal_gpio.c: 130:         ret = (std_ReturneType)0x00 ;
  1551   0015E0  0E00               	movlw	0
  1552   0015E2  6E4C               	movwf	gpio_pin_intialize@ret^0,c
  1553   0015E4  EF0F  F00B         	goto	l7694
  1554   0015E8                     l7688:
  1555                           
  1556                           ;MCAL_Layer/GPIO/hal_gpio.c: 132:     {;MCAL_Layer/GPIO/hal_gpio.c: 133:         ret = g
      +                          pio_pin_direction_intialize(_pin_config);
  1557   0015E8  C04A  F042         	movff	gpio_pin_intialize@_pin_config,gpio_pin_direction_intialize@_pin_config
  1558   0015EC  EC0D  F008         	call	_gpio_pin_direction_intialize	;wreg free
  1559   0015F0  6E4C               	movwf	gpio_pin_intialize@ret^0,c
  1560   0015F2                     
  1561                           ;MCAL_Layer/GPIO/hal_gpio.c: 134:         if(_pin_config->direction == OUTPUT)
  1562   0015F2  504A               	movf	gpio_pin_intialize@_pin_config^0,w,c
  1563   0015F4  6ED9               	movwf	fsr2l,c
  1564   0015F6  6ADA               	clrf	fsr2h,c
  1565   0015F8  BCDF               	btfsc	indf2,6,c
  1566   0015FA  EF01  F00B         	goto	u6291
  1567   0015FE  EF03  F00B         	goto	u6290
  1568   001602                     u6291:
  1569   001602  EF0F  F00B         	goto	l7694
  1570   001606                     u6290:
  1571   001606                     
  1572                           ;MCAL_Layer/GPIO/hal_gpio.c: 135:         {;MCAL_Layer/GPIO/hal_gpio.c: 136:            
      +                           ret = gpio_pin_write_logic(_pin_config , _pin_config->logic);
  1573   001606  C04A  F042         	movff	gpio_pin_intialize@_pin_config,gpio_pin_write_logic@_pin_config
  1574   00160A  504A               	movf	gpio_pin_intialize@_pin_config^0,w,c
  1575   00160C  6ED9               	movwf	fsr2l,c
  1576   00160E  6ADA               	clrf	fsr2h,c
  1577   001610  0E00               	movlw	0
  1578   001612  BEDF               	btfsc	indf2,7,c
  1579   001614  0E01               	movlw	1
  1580   001616  6E43               	movwf	gpio_pin_write_logic@logic^0,c
  1581   001618  ECA0  F008         	call	_gpio_pin_write_logic	;wreg free
  1582   00161C  6E4C               	movwf	gpio_pin_intialize@ret^0,c
  1583   00161E                     l7694:
  1584                           
  1585                           ;MCAL_Layer/GPIO/hal_gpio.c: 139:     return ret ;
  1586   00161E  504C               	movf	gpio_pin_intialize@ret^0,w,c
  1587   001620  0012               	return		;funcret
  1588   001622                     __end_of_gpio_pin_intialize:
  1589                           	callstack 0
  1590                           
  1591 ;; *************** function _gpio_pin_write_logic *****************
  1592 ;; Defined at:
  1593 ;;		line 61 in file "MCAL_Layer/GPIO/hal_gpio.c"
  1594 ;; Parameters:    Size  Location     Type
  1595 ;;  _pin_config     1    1[COMRAM] PTR const struct .
  1596 ;;		 -> lcd_1$lcd_data(4), lcd_1$lcd_en(1), lcd_1$lcd_rs(1), lcd_1(6), 
  1597 ;;		 -> relay_turn_off@pin_obj(1), relay_turn_on@pin_obj(1), led_turn_off@pin_obj(1), led_turn_on@pin_obj(1), 
  1598 ;;  logic           1    2[COMRAM] unsigned char 
  1599 ;; Auto vars:     Size  Location     Type
  1600 ;;  ret             1    8[COMRAM] unsigned char 
  1601 ;; Return value:  Size  Location     Type
  1602 ;;                  1    wreg      unsigned char 
  1603 ;; Registers used:
  1604 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1605 ;; Tracked objects:
  1606 ;;		On entry : 0/0
  1607 ;;		On exit  : 0/0
  1608 ;;		Unchanged: 0/0
  1609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1610 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1611 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1612 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1613 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1614 ;;Total ram usage:        8 bytes
  1615 ;; Hardware stack levels used: 1
  1616 ;; Hardware stack levels required when called: 2
  1617 ;; This function calls:
  1618 ;;		Nothing
  1619 ;; This function is called by:
  1620 ;;		_lcd_4_send_command
  1621 ;;		_lcd_send_4bit
  1622 ;;		_lcd_4bit_send_enable_signale
  1623 ;;		_gpio_pin_intialize
  1624 ;;		_seven_segment_write_number
  1625 ;;		_lcd_4_send_char_data
  1626 ;;		_lcd_8_send_command
  1627 ;;		_lcd_8_send_char_data
  1628 ;;		_lcd_8bit_send_enable_signale
  1629 ;;		_dc_motor_move_right
  1630 ;;		_dc_motor_move_left
  1631 ;;		_dc_motor_stop
  1632 ;;		_DHT11_Read_Data
  1633 ;;		_keypad_get_value
  1634 ;;		_led_turn_on
  1635 ;;		_led_turn_off
  1636 ;;		_relay_turn_on
  1637 ;;		_relay_turn_off
  1638 ;;		_Ultrasonic_Sensor_Get_Distance
  1639 ;; This function uses a non-reentrant model
  1640 ;;
  1641                           
  1642                           	psect	text7
  1643   001140                     __ptext7:
  1644                           	callstack 0
  1645   001140                     _gpio_pin_write_logic:
  1646                           	callstack 24
  1647   001140                     
  1648                           ;MCAL_Layer/GPIO/hal_gpio.c: 61: std_ReturneType gpio_pin_write_logic(const pin_config_t
      +                           *_pin_config , uint8 logic);MCAL_Layer/GPIO/hal_gpio.c: 62: {;MCAL_Layer/GPIO/hal_gpio.
      +                          c: 63:     std_ReturneType ret = (std_ReturneType)0x01 ;
  1649   001140  0E01               	movlw	1
  1650   001142  6E49               	movwf	gpio_pin_write_logic@ret^0,c
  1651                           
  1652                           ;MCAL_Layer/GPIO/hal_gpio.c: 64:     if((_pin_config == ((void*)0)) || (_pin_config->pin
      +                           > 8 -1))
  1653   001144  5042               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1654   001146  B4D8               	btfsc	status,2,c
  1655   001148  EFA8  F008         	goto	u6151
  1656   00114C  EFAA  F008         	goto	u6150
  1657   001150                     u6151:
  1658   001150  EFBA  F008         	goto	l7616
  1659   001154                     u6150:
  1660   001154  5042               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1661   001156  6ED9               	movwf	fsr2l,c
  1662   001158  6ADA               	clrf	fsr2h,c
  1663   00115A  30DF               	rrcf	223,w,c
  1664   00115C  32E8               	rrcf	wreg,f,c
  1665   00115E  32E8               	rrcf	wreg,f,c
  1666   001160  0B07               	andlw	7
  1667   001162  6E44               	movwf	??_gpio_pin_write_logic^0,c
  1668   001164  0E07               	movlw	7
  1669   001166  6444               	cpfsgt	??_gpio_pin_write_logic^0,c
  1670   001168  EFB8  F008         	goto	u6161
  1671   00116C  EFBA  F008         	goto	u6160
  1672   001170                     u6161:
  1673   001170  EF11  F009         	goto	l7624
  1674   001174                     u6160:
  1675   001174                     l7616:
  1676                           
  1677                           ;MCAL_Layer/GPIO/hal_gpio.c: 65:         ret = (std_ReturneType)0x00 ;
  1678   001174  0E00               	movlw	0
  1679   001176  6E49               	movwf	gpio_pin_write_logic@ret^0,c
  1680   001178  EF26  F009         	goto	l7626
  1681   00117C                     l7618:
  1682                           
  1683                           ;MCAL_Layer/GPIO/hal_gpio.c: 71:                 ((*((volatile uint8 *)(lat_register[_pi
      +                          n_config->port]))) &= ~((uint8)1 << _pin_config->pin));
  1684   00117C  5042               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1685   00117E  6ED9               	movwf	fsr2l,c
  1686   001180  6ADA               	clrf	fsr2h,c
  1687   001182  30DF               	rrcf	223,w,c
  1688   001184  32E8               	rrcf	wreg,f,c
  1689   001186  32E8               	rrcf	wreg,f,c
  1690   001188  0B07               	andlw	7
  1691   00118A  6E44               	movwf	??_gpio_pin_write_logic^0,c
  1692   00118C  0E01               	movlw	1
  1693   00118E  6E45               	movwf	(??_gpio_pin_write_logic+1)^0,c
  1694   001190  2A44               	incf	??_gpio_pin_write_logic^0,f,c
  1695   001192  EFCD  F008         	goto	u6174
  1696   001196                     u6175:
  1697   001196  90D8               	bcf	status,0,c
  1698   001198  3645               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  1699   00119A                     u6174:
  1700   00119A  2E44               	decfsz	??_gpio_pin_write_logic^0,f,c
  1701   00119C  EFCB  F008         	goto	u6175
  1702   0011A0  5045               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1703   0011A2  0AFF               	xorlw	255
  1704   0011A4  6E46               	movwf	(??_gpio_pin_write_logic+2)^0,c
  1705   0011A6  5042               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1706   0011A8  6ED9               	movwf	fsr2l,c
  1707   0011AA  6ADA               	clrf	fsr2h,c
  1708   0011AC  50DF               	movf	223,w,c
  1709   0011AE  0B07               	andlw	7
  1710   0011B0  0D02               	mullw	2
  1711   0011B2  50F3               	movf	243,w,c
  1712   0011B4  0F6A               	addlw	low _lat_register
  1713   0011B6  6ED9               	movwf	fsr2l,c
  1714   0011B8  6ADA               	clrf	fsr2h,c
  1715   0011BA  CFDE F047          	movff	postinc2,??_gpio_pin_write_logic+3
  1716   0011BE  CFDD F048          	movff	postdec2,??_gpio_pin_write_logic+4
  1717   0011C2  C047  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  1718   0011C6  C048  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  1719   0011CA  5046               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  1720   0011CC  16DF               	andwf	indf2,f,c
  1721                           
  1722                           ;MCAL_Layer/GPIO/hal_gpio.c: 72:                 break;
  1723   0011CE  EF26  F009         	goto	l7626
  1724   0011D2                     l7620:
  1725                           
  1726                           ;MCAL_Layer/GPIO/hal_gpio.c: 74:                 ((*((volatile uint8 *)(lat_register[_pi
      +                          n_config->port]))) |= ((uint8)1 << _pin_config->pin));
  1727   0011D2  5042               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1728   0011D4  6ED9               	movwf	fsr2l,c
  1729   0011D6  6ADA               	clrf	fsr2h,c
  1730   0011D8  30DF               	rrcf	223,w,c
  1731   0011DA  32E8               	rrcf	wreg,f,c
  1732   0011DC  32E8               	rrcf	wreg,f,c
  1733   0011DE  0B07               	andlw	7
  1734   0011E0  6E44               	movwf	??_gpio_pin_write_logic^0,c
  1735   0011E2  0E01               	movlw	1
  1736   0011E4  6E45               	movwf	(??_gpio_pin_write_logic+1)^0,c
  1737   0011E6  2A44               	incf	??_gpio_pin_write_logic^0,f,c
  1738   0011E8  EFF8  F008         	goto	u6184
  1739   0011EC                     u6185:
  1740   0011EC  90D8               	bcf	status,0,c
  1741   0011EE  3645               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  1742   0011F0                     u6184:
  1743   0011F0  2E44               	decfsz	??_gpio_pin_write_logic^0,f,c
  1744   0011F2  EFF6  F008         	goto	u6185
  1745   0011F6  5042               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1746   0011F8  6ED9               	movwf	fsr2l,c
  1747   0011FA  6ADA               	clrf	fsr2h,c
  1748   0011FC  50DF               	movf	223,w,c
  1749   0011FE  0B07               	andlw	7
  1750   001200  0D02               	mullw	2
  1751   001202  50F3               	movf	243,w,c
  1752   001204  0F6A               	addlw	low _lat_register
  1753   001206  6ED9               	movwf	fsr2l,c
  1754   001208  6ADA               	clrf	fsr2h,c
  1755   00120A  CFDE F046          	movff	postinc2,??_gpio_pin_write_logic+2
  1756   00120E  CFDD F047          	movff	postdec2,??_gpio_pin_write_logic+3
  1757   001212  C046  FFD9         	movff	??_gpio_pin_write_logic+2,fsr2l
  1758   001216  C047  FFDA         	movff	??_gpio_pin_write_logic+3,fsr2h
  1759   00121A  5045               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1760   00121C  12DF               	iorwf	indf2,f,c
  1761                           
  1762                           ;MCAL_Layer/GPIO/hal_gpio.c: 75:                 break;
  1763   00121E  EF26  F009         	goto	l7626
  1764   001222                     l7624:
  1765   001222  5043               	movf	gpio_pin_write_logic@logic^0,w,c
  1766   001224  6E44               	movwf	??_gpio_pin_write_logic^0,c
  1767   001226  6A45               	clrf	(??_gpio_pin_write_logic+1)^0,c
  1768                           
  1769                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1770                           ; Switch size 1, requested type "simple"
  1771                           ; Number of cases is 1, Range of values is 0 to 0
  1772                           ; switch strategies available:
  1773                           ; Name         Instructions Cycles
  1774                           ; simple_byte            4     3 (average)
  1775                           ;	Chosen strategy is simple_byte
  1776   001228  5045               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1777   00122A  0A00               	xorlw	0	; case 0
  1778   00122C  B4D8               	btfsc	status,2,c
  1779   00122E  EF1B  F009         	goto	l9046
  1780   001232  EFBA  F008         	goto	l7616
  1781   001236                     l9046:
  1782                           
  1783                           ; Switch size 1, requested type "simple"
  1784                           ; Number of cases is 2, Range of values is 0 to 1
  1785                           ; switch strategies available:
  1786                           ; Name         Instructions Cycles
  1787                           ; simple_byte            7     4 (average)
  1788                           ;	Chosen strategy is simple_byte
  1789   001236  5044               	movf	??_gpio_pin_write_logic^0,w,c
  1790   001238  0A00               	xorlw	0	; case 0
  1791   00123A  B4D8               	btfsc	status,2,c
  1792   00123C  EFBE  F008         	goto	l7618
  1793   001240  0A01               	xorlw	1	; case 1
  1794   001242  B4D8               	btfsc	status,2,c
  1795   001244  EFE9  F008         	goto	l7620
  1796   001248  EFBA  F008         	goto	l7616
  1797   00124C                     l7626:
  1798                           
  1799                           ;MCAL_Layer/GPIO/hal_gpio.c: 80:     return ret ;
  1800   00124C  5049               	movf	gpio_pin_write_logic@ret^0,w,c
  1801   00124E  0012               	return		;funcret
  1802   001250                     __end_of_gpio_pin_write_logic:
  1803                           	callstack 0
  1804                           
  1805 ;; *************** function _MQ2_initialize *****************
  1806 ;; Defined at:
  1807 ;;		line 5 in file "ECU_Layer/MQ2/mq2.c"
  1808 ;; Parameters:    Size  Location     Type
  1809 ;;  mq2_obj         1   11[COMRAM] PTR const struct .
  1810 ;;		 -> mq2_pin(9), 
  1811 ;; Auto vars:     Size  Location     Type
  1812 ;;  ret             1   12[COMRAM] unsigned char 
  1813 ;; Return value:  Size  Location     Type
  1814 ;;                  1    wreg      unsigned char 
  1815 ;; Registers used:
  1816 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1817 ;; Tracked objects:
  1818 ;;		On entry : 0/0
  1819 ;;		On exit  : 0/0
  1820 ;;		Unchanged: 0/0
  1821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1822 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1823 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1825 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1826 ;;Total ram usage:        2 bytes
  1827 ;; Hardware stack levels used: 1
  1828 ;; Hardware stack levels required when called: 4
  1829 ;; This function calls:
  1830 ;;		_ADC_initialize
  1831 ;;		_gpio_pin_direction_intialize
  1832 ;; This function is called by:
  1833 ;;		_ecu_layer_initialize
  1834 ;; This function uses a non-reentrant model
  1835 ;;
  1836                           
  1837                           	psect	text8
  1838   001792                     __ptext8:
  1839                           	callstack 0
  1840   001792                     _MQ2_initialize:
  1841                           	callstack 25
  1842   001792                     
  1843                           ;ECU_Layer/MQ2/mq2.c: 8:     if(mq2_obj == ((void*)0))
  1844   001792  504C               	movf	MQ2_initialize@mq2_obj^0,w,c
  1845   001794  A4D8               	btfss	status,2,c
  1846   001796  EFCF  F00B         	goto	u6441
  1847   00179A  EFD1  F00B         	goto	u6440
  1848   00179E                     u6441:
  1849   00179E  EFD5  F00B         	goto	l7872
  1850   0017A2                     u6440:
  1851   0017A2                     
  1852                           ;ECU_Layer/MQ2/mq2.c: 9:         ret = (std_ReturneType)0x00;
  1853   0017A2  0E00               	movlw	0
  1854   0017A4  6E4D               	movwf	MQ2_initialize@ret^0,c
  1855   0017A6  EFE2  F00B         	goto	l7876
  1856   0017AA                     l7872:
  1857                           
  1858                           ;ECU_Layer/MQ2/mq2.c: 11:     {;ECU_Layer/MQ2/mq2.c: 12:         ret = ADC_initialize(&(
      +                          mq2_obj->MQ2_pin_analog));
  1859   0017AA  C04C  F049         	movff	MQ2_initialize@mq2_obj,ADC_initialize@_adc
  1860   0017AE  ECA0  F009         	call	_ADC_initialize	;wreg free
  1861   0017B2  6E4D               	movwf	MQ2_initialize@ret^0,c
  1862                           
  1863                           ;ECU_Layer/MQ2/mq2.c: 13:         ret = gpio_pin_direction_intialize(&(mq2_obj->MQ2_pin_
      +                          digital));
  1864   0017B4  504C               	movf	MQ2_initialize@mq2_obj^0,w,c
  1865   0017B6  0F08               	addlw	8
  1866   0017B8  6E42               	movwf	gpio_pin_direction_intialize@_pin_config^0,c
  1867   0017BA  EC0D  F008         	call	_gpio_pin_direction_intialize	;wreg free
  1868   0017BE  6E4D               	movwf	MQ2_initialize@ret^0,c
  1869   0017C0                     
  1870                           ;ECU_Layer/MQ2/mq2.c: 14:         ret = (std_ReturneType)0x01;
  1871   0017C0  0E01               	movlw	1
  1872   0017C2  6E4D               	movwf	MQ2_initialize@ret^0,c
  1873   0017C4                     l7876:
  1874                           
  1875                           ;ECU_Layer/MQ2/mq2.c: 16:     return ret;
  1876   0017C4  504D               	movf	MQ2_initialize@ret^0,w,c
  1877   0017C6  0012               	return		;funcret
  1878   0017C8                     __end_of_MQ2_initialize:
  1879                           	callstack 0
  1880                           
  1881 ;; *************** function _ADC_initialize *****************
  1882 ;; Defined at:
  1883 ;;		line 13 in file "MCAL_Layer/ADC/hal_adc.c"
  1884 ;; Parameters:    Size  Location     Type
  1885 ;;  _adc            1    8[COMRAM] PTR const struct .
  1886 ;;		 -> mq2_pin(9), 
  1887 ;; Auto vars:     Size  Location     Type
  1888 ;;  ret             1   10[COMRAM] unsigned char 
  1889 ;; Return value:  Size  Location     Type
  1890 ;;                  1    wreg      unsigned char 
  1891 ;; Registers used:
  1892 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1893 ;; Tracked objects:
  1894 ;;		On entry : 0/0
  1895 ;;		On exit  : 0/0
  1896 ;;		Unchanged: 0/0
  1897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1898 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1899 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1900 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1901 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1902 ;;Total ram usage:        3 bytes
  1903 ;; Hardware stack levels used: 1
  1904 ;; Hardware stack levels required when called: 3
  1905 ;; This function calls:
  1906 ;;		_gpio_pin_direction_intialize
  1907 ;;		_select_result_format
  1908 ;;		_select_voltage
  1909 ;; This function is called by:
  1910 ;;		_MQ2_initialize
  1911 ;;		_JOT_STICK_initialize
  1912 ;;		_LM35_initialize
  1913 ;; This function uses a non-reentrant model
  1914 ;;
  1915                           
  1916                           	psect	text9
  1917   001340                     __ptext9:
  1918                           	callstack 0
  1919   001340                     _ADC_initialize:
  1920                           	callstack 25
  1921   001340                     
  1922                           ;MCAL_Layer/ADC/hal_adc.c: 16:     if(_adc == ((void*)0))
  1923   001340  5049               	movf	ADC_initialize@_adc^0,w,c
  1924   001342  A4D8               	btfss	status,2,c
  1925   001344  EFA6  F009         	goto	u6311
  1926   001348  EFA8  F009         	goto	u6310
  1927   00134C                     u6311:
  1928   00134C  EFAC  F009         	goto	l724
  1929   001350                     u6310:
  1930   001350                     
  1931                           ;MCAL_Layer/ADC/hal_adc.c: 17:         ret = (std_ReturneType)0x00 ;
  1932   001350  0E00               	movlw	0
  1933   001352  6E4B               	movwf	ADC_initialize@ret^0,c
  1934   001354  EF11  F00A         	goto	l7738
  1935   001358                     l724:
  1936                           
  1937                           ;MCAL_Layer/ADC/hal_adc.c: 19:     {;MCAL_Layer/ADC/hal_adc.c: 20:         (ADCON0bits.A
      +                          DON = 0);
  1938   001358  90C2               	bcf	194,0,c	;volatile
  1939   00135A                     
  1940                           ;MCAL_Layer/ADC/hal_adc.c: 21:         ADCON2bits.ACQT = _adc->Time ;
  1941   00135A  5049               	movf	ADC_initialize@_adc^0,w,c
  1942   00135C  6ED9               	movwf	fsr2l,c
  1943   00135E  6ADA               	clrf	fsr2h,c
  1944   001360  0E03               	movlw	3
  1945   001362  26D9               	addwf	fsr2l,f,c
  1946   001364  50DF               	movf	indf2,w,c
  1947   001366  6E4A               	movwf	??_ADC_initialize^0,c
  1948   001368  464A               	rlncf	??_ADC_initialize^0,f,c
  1949   00136A  464A               	rlncf	??_ADC_initialize^0,f,c
  1950   00136C  464A               	rlncf	??_ADC_initialize^0,f,c
  1951   00136E  50C0               	movf	192,w,c	;volatile
  1952   001370  184A               	xorwf	??_ADC_initialize^0,w,c
  1953   001372  0BC7               	andlw	-57
  1954   001374  184A               	xorwf	??_ADC_initialize^0,w,c
  1955   001376  6EC0               	movwf	192,c	;volatile
  1956                           
  1957                           ;MCAL_Layer/ADC/hal_adc.c: 22:         ADCON2bits.ADCS = _adc->Frequency ;
  1958   001378  5049               	movf	ADC_initialize@_adc^0,w,c
  1959   00137A  6ED9               	movwf	fsr2l,c
  1960   00137C  6ADA               	clrf	fsr2h,c
  1961   00137E  0E02               	movlw	2
  1962   001380  26D9               	addwf	fsr2l,f,c
  1963   001382  50DF               	movf	indf2,w,c
  1964   001384  6E4A               	movwf	??_ADC_initialize^0,c
  1965   001386  50C0               	movf	192,w,c	;volatile
  1966   001388  184A               	xorwf	??_ADC_initialize^0,w,c
  1967   00138A  0BF8               	andlw	-8
  1968   00138C  184A               	xorwf	??_ADC_initialize^0,w,c
  1969   00138E  6EC0               	movwf	192,c	;volatile
  1970                           
  1971                           ;MCAL_Layer/ADC/hal_adc.c: 23:         ADCON0bits.CHS = _adc->ANx ;
  1972   001390  5049               	movf	ADC_initialize@_adc^0,w,c
  1973   001392  6ED9               	movwf	fsr2l,c
  1974   001394  6ADA               	clrf	fsr2h,c
  1975   001396  0E01               	movlw	1
  1976   001398  26D9               	addwf	fsr2l,f,c
  1977   00139A  50DF               	movf	indf2,w,c
  1978   00139C  6E4A               	movwf	??_ADC_initialize^0,c
  1979   00139E  464A               	rlncf	??_ADC_initialize^0,f,c
  1980   0013A0  464A               	rlncf	??_ADC_initialize^0,f,c
  1981   0013A2  50C2               	movf	194,w,c	;volatile
  1982   0013A4  184A               	xorwf	??_ADC_initialize^0,w,c
  1983   0013A6  0BC3               	andlw	-61
  1984   0013A8  184A               	xorwf	??_ADC_initialize^0,w,c
  1985   0013AA  6EC2               	movwf	194,c	;volatile
  1986   0013AC  C049  F042         	movff	ADC_initialize@_adc,gpio_pin_direction_intialize@_pin_config
  1987   0013B0  EC0D  F008         	call	_gpio_pin_direction_intialize	;wreg free
  1988   0013B4                     
  1989                           ;MCAL_Layer/ADC/hal_adc.c: 27:         (PIE1bits.ADIE = 1);
  1990   0013B4  8C9D               	bsf	157,6,c	;volatile
  1991   0013B6                     
  1992                           ;MCAL_Layer/ADC/hal_adc.c: 28:         (PIR1bits.ADIF = 0);
  1993   0013B6  9C9E               	bcf	158,6,c	;volatile
  1994   0013B8                     
  1995                           ;MCAL_Layer/ADC/hal_adc.c: 29:         ADC_INTERRUPT_HANDLER = _adc->ADC_INTERRUPT_HANDL
      +                          ER ;
  1996   0013B8  5049               	movf	ADC_initialize@_adc^0,w,c
  1997   0013BA  6ED9               	movwf	fsr2l,c
  1998   0013BC  6ADA               	clrf	fsr2h,c
  1999   0013BE  0E05               	movlw	5
  2000   0013C0  26D9               	addwf	fsr2l,f,c
  2001   0013C2  CFDE F035          	movff	postinc2,_ADC_INTERRUPT_HANDLER
  2002   0013C6  CFDD F036          	movff	postdec2,_ADC_INTERRUPT_HANDLER+1
  2003   0013CA                     
  2004                           ;MCAL_Layer/ADC/hal_adc.c: 31:         (RCONbits.IPEN = 1);
  2005   0013CA  8ED0               	bsf	208,7,c	;volatile
  2006   0013CC                     
  2007                           ;MCAL_Layer/ADC/hal_adc.c: 32:         if(_adc->priority == HIGH_PRIORITY)
  2008   0013CC  5049               	movf	ADC_initialize@_adc^0,w,c
  2009   0013CE  6ED9               	movwf	fsr2l,c
  2010   0013D0  6ADA               	clrf	fsr2h,c
  2011   0013D2  0E07               	movlw	7
  2012   0013D4  26D9               	addwf	fsr2l,f,c
  2013   0013D6  04DE               	decf	postinc2,w,c
  2014   0013D8  A4D8               	btfss	status,2,c
  2015   0013DA  EFF1  F009         	goto	u6321
  2016   0013DE  EFF3  F009         	goto	u6320
  2017   0013E2                     u6321:
  2018   0013E2  EFF7  F009         	goto	l7728
  2019   0013E6                     u6320:
  2020   0013E6                     
  2021                           ;MCAL_Layer/ADC/hal_adc.c: 33:         {;MCAL_Layer/ADC/hal_adc.c: 34:             (INTC
      +                          ONbits.GIEH = 1);
  2022   0013E6  8EF2               	bsf	242,7,c	;volatile
  2023                           
  2024                           ;MCAL_Layer/ADC/hal_adc.c: 35:             (IPR1bits.ADIP = 1);
  2025   0013E8  8C9F               	bsf	159,6,c	;volatile
  2026                           
  2027                           ;MCAL_Layer/ADC/hal_adc.c: 36:         }
  2028   0013EA  EF06  F00A         	goto	l7732
  2029   0013EE                     l7728:
  2030   0013EE  5049               	movf	ADC_initialize@_adc^0,w,c
  2031   0013F0  6ED9               	movwf	fsr2l,c
  2032   0013F2  6ADA               	clrf	fsr2h,c
  2033   0013F4  0E07               	movlw	7
  2034   0013F6  26D9               	addwf	fsr2l,f,c
  2035   0013F8  50DF               	movf	indf2,w,c
  2036   0013FA  A4D8               	btfss	status,2,c
  2037   0013FC  EF02  F00A         	goto	u6331
  2038   001400  EF04  F00A         	goto	u6330
  2039   001404                     u6331:
  2040   001404  EF06  F00A         	goto	l7732
  2041   001408                     u6330:
  2042   001408                     
  2043                           ;MCAL_Layer/ADC/hal_adc.c: 38:         {;MCAL_Layer/ADC/hal_adc.c: 39:             (INTC
      +                          ONbits.GIEL = 1);
  2044   001408  8CF2               	bsf	242,6,c	;volatile
  2045                           
  2046                           ;MCAL_Layer/ADC/hal_adc.c: 40:             (IPR1bits.ADIP = 0);
  2047   00140A  9C9F               	bcf	159,6,c	;volatile
  2048   00140C                     l7732:
  2049                           
  2050                           ;MCAL_Layer/ADC/hal_adc.c: 49:         select_result_format(_adc);
  2051   00140C  C049  F042         	movff	ADC_initialize@_adc,select_result_format@_adc
  2052   001410  EC8A  F00B         	call	_select_result_format	;wreg free
  2053                           
  2054                           ;MCAL_Layer/ADC/hal_adc.c: 50:         select_voltage(_adc);
  2055   001414  C049  F042         	movff	ADC_initialize@_adc,select_voltage@_adc
  2056   001418  EC67  F00B         	call	_select_voltage	;wreg free
  2057   00141C                     
  2058                           ;MCAL_Layer/ADC/hal_adc.c: 51:         (ADCON0bits.ADON = 1);
  2059   00141C  80C2               	bsf	194,0,c	;volatile
  2060   00141E                     
  2061                           ;MCAL_Layer/ADC/hal_adc.c: 52:         ret = (std_ReturneType)0x01 ;
  2062   00141E  0E01               	movlw	1
  2063   001420  6E4B               	movwf	ADC_initialize@ret^0,c
  2064   001422                     l7738:
  2065                           
  2066                           ;MCAL_Layer/ADC/hal_adc.c: 54:     return ret ;
  2067   001422  504B               	movf	ADC_initialize@ret^0,w,c
  2068   001424  0012               	return		;funcret
  2069   001426                     __end_of_ADC_initialize:
  2070                           	callstack 0
  2071                           
  2072 ;; *************** function _select_voltage *****************
  2073 ;; Defined at:
  2074 ;;		line 194 in file "MCAL_Layer/ADC/hal_adc.c"
  2075 ;; Parameters:    Size  Location     Type
  2076 ;;  _adc            1    1[COMRAM] PTR const struct .
  2077 ;;		 -> mq2_pin(9), 
  2078 ;; Auto vars:     Size  Location     Type
  2079 ;;		None
  2080 ;; Return value:  Size  Location     Type
  2081 ;;                  1    wreg      void 
  2082 ;; Registers used:
  2083 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2084 ;; Tracked objects:
  2085 ;;		On entry : 0/0
  2086 ;;		On exit  : 0/0
  2087 ;;		Unchanged: 0/0
  2088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2089 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2092 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2093 ;;Total ram usage:        1 bytes
  2094 ;; Hardware stack levels used: 1
  2095 ;; Hardware stack levels required when called: 2
  2096 ;; This function calls:
  2097 ;;		Nothing
  2098 ;; This function is called by:
  2099 ;;		_ADC_initialize
  2100 ;; This function uses a non-reentrant model
  2101 ;;
  2102                           
  2103                           	psect	text10
  2104   0016CE                     __ptext10:
  2105                           	callstack 0
  2106   0016CE                     _select_voltage:
  2107                           	callstack 25
  2108   0016CE                     
  2109                           ;MCAL_Layer/ADC/hal_adc.c: 194: static __attribute__((inline)) void select_voltage(const
      +                           ADC_config_t *_adc);MCAL_Layer/ADC/hal_adc.c: 195: {;MCAL_Layer/ADC/hal_adc.c: 196:    
      +                           if(0 == _adc->Volte)
  2110   0016CE  5042               	movf	select_voltage@_adc^0,w,c
  2111   0016D0  6ED9               	movwf	fsr2l,c
  2112   0016D2  6ADA               	clrf	fsr2h,c
  2113   0016D4  0E04               	movlw	4
  2114   0016D6  26D9               	addwf	fsr2l,f,c
  2115   0016D8  B2DF               	btfsc	indf2,1,c
  2116   0016DA  EF71  F00B         	goto	u4051
  2117   0016DE  EF73  F00B         	goto	u4050
  2118   0016E2                     u4051:
  2119   0016E2  EF77  F00B         	goto	l5978
  2120   0016E6                     u4050:
  2121   0016E6  9AC1               	bcf	193,5,c	;volatile
  2122   0016E8  98C1               	bcf	193,4,c	;volatile
  2123   0016EA  EF89  F00B         	goto	l796
  2124   0016EE                     l5978:
  2125   0016EE  5042               	movf	select_voltage@_adc^0,w,c
  2126   0016F0  6ED9               	movwf	fsr2l,c
  2127   0016F2  6ADA               	clrf	fsr2h,c
  2128   0016F4  0E04               	movlw	4
  2129   0016F6  26D9               	addwf	fsr2l,f,c
  2130   0016F8  A2DF               	btfss	indf2,1,c
  2131   0016FA  EF81  F00B         	goto	u4061
  2132   0016FE  EF83  F00B         	goto	u4060
  2133   001702                     u4061:
  2134   001702  EF87  F00B         	goto	l794
  2135   001706                     u4060:
  2136   001706  8AC1               	bsf	193,5,c	;volatile
  2137   001708  88C1               	bsf	193,4,c	;volatile
  2138   00170A  EF89  F00B         	goto	l796
  2139   00170E                     l794:
  2140   00170E  9AC1               	bcf	193,5,c	;volatile
  2141   001710  98C1               	bcf	193,4,c	;volatile
  2142   001712                     l796:
  2143   001712  0012               	return		;funcret
  2144   001714                     __end_of_select_voltage:
  2145                           	callstack 0
  2146                           
  2147 ;; *************** function _select_result_format *****************
  2148 ;; Defined at:
  2149 ;;		line 176 in file "MCAL_Layer/ADC/hal_adc.c"
  2150 ;; Parameters:    Size  Location     Type
  2151 ;;  _adc            1    1[COMRAM] PTR const struct .
  2152 ;;		 -> mq2_pin(9), 
  2153 ;; Auto vars:     Size  Location     Type
  2154 ;;		None
  2155 ;; Return value:  Size  Location     Type
  2156 ;;                  1    wreg      void 
  2157 ;; Registers used:
  2158 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2159 ;; Tracked objects:
  2160 ;;		On entry : 0/0
  2161 ;;		On exit  : 0/0
  2162 ;;		Unchanged: 0/0
  2163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2164 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2167 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2168 ;;Total ram usage:        1 bytes
  2169 ;; Hardware stack levels used: 1
  2170 ;; Hardware stack levels required when called: 2
  2171 ;; This function calls:
  2172 ;;		Nothing
  2173 ;; This function is called by:
  2174 ;;		_ADC_initialize
  2175 ;; This function uses a non-reentrant model
  2176 ;;
  2177                           
  2178                           	psect	text11
  2179   001714                     __ptext11:
  2180                           	callstack 0
  2181   001714                     _select_result_format:
  2182                           	callstack 25
  2183   001714                     
  2184                           ;MCAL_Layer/ADC/hal_adc.c: 176: static __attribute__((inline)) void select_result_format
      +                          (const ADC_config_t *_adc);MCAL_Layer/ADC/hal_adc.c: 177: {;MCAL_Layer/ADC/hal_adc.c: 17
      +                          8:     if(1 == _adc->Justified)
  2185   001714  5042               	movf	select_result_format@_adc^0,w,c
  2186   001716  6ED9               	movwf	fsr2l,c
  2187   001718  6ADA               	clrf	fsr2h,c
  2188   00171A  0E04               	movlw	4
  2189   00171C  26D9               	addwf	fsr2l,f,c
  2190   00171E  A0DF               	btfss	indf2,0,c
  2191   001720  EF94  F00B         	goto	u4031
  2192   001724  EF96  F00B         	goto	u4030
  2193   001728                     u4031:
  2194   001728  EF99  F00B         	goto	l5972
  2195   00172C                     u4030:
  2196   00172C                     
  2197                           ;MCAL_Layer/ADC/hal_adc.c: 179:     {;MCAL_Layer/ADC/hal_adc.c: 180:         (ADCON2bits
      +                          .ADFM = 1);
  2198   00172C  8EC0               	bsf	192,7,c	;volatile
  2199                           
  2200                           ;MCAL_Layer/ADC/hal_adc.c: 181:     }
  2201   00172E  EFA9  F00B         	goto	l783
  2202   001732                     l5972:
  2203   001732  5042               	movf	select_result_format@_adc^0,w,c
  2204   001734  6ED9               	movwf	fsr2l,c
  2205   001736  6ADA               	clrf	fsr2h,c
  2206   001738  0E04               	movlw	4
  2207   00173A  26D9               	addwf	fsr2l,f,c
  2208   00173C  B0DF               	btfsc	indf2,0,c
  2209   00173E  EFA3  F00B         	goto	u4041
  2210   001742  EFA5  F00B         	goto	u4040
  2211   001746                     u4041:
  2212   001746  EFA8  F00B         	goto	l781
  2213   00174A                     u4040:
  2214   00174A                     
  2215                           ;MCAL_Layer/ADC/hal_adc.c: 183:     {;MCAL_Layer/ADC/hal_adc.c: 184:         (ADCON2bits
      +                          .ADFM = 0);
  2216   00174A  9EC0               	bcf	192,7,c	;volatile
  2217                           
  2218                           ;MCAL_Layer/ADC/hal_adc.c: 185:     }
  2219   00174C  EFA9  F00B         	goto	l783
  2220   001750                     l781:
  2221                           
  2222                           ;MCAL_Layer/ADC/hal_adc.c: 187:     {;MCAL_Layer/ADC/hal_adc.c: 188:         (ADCON2bits
      +                          .ADFM = 1);
  2223   001750  8EC0               	bsf	192,7,c	;volatile
  2224   001752                     l783:
  2225   001752  0012               	return		;funcret
  2226   001754                     __end_of_select_result_format:
  2227                           	callstack 0
  2228                           
  2229 ;; *************** function _gpio_pin_direction_intialize *****************
  2230 ;; Defined at:
  2231 ;;		line 13 in file "MCAL_Layer/GPIO/hal_gpio.c"
  2232 ;; Parameters:    Size  Location     Type
  2233 ;;  _pin_config     1    1[COMRAM] PTR const struct .
  2234 ;;		 -> mq2_pin(9), lcd_1$lcd_data(4), lcd_1$lcd_en(1), lcd_1$lcd_rs(1), 
  2235 ;;		 -> lcd_1(6), relay_intialize@pin_obj(1), led_initialize@pin_obj(1), 
  2236 ;; Auto vars:     Size  Location     Type
  2237 ;;  ret             1    7[COMRAM] unsigned char 
  2238 ;; Return value:  Size  Location     Type
  2239 ;;                  1    wreg      unsigned char 
  2240 ;; Registers used:
  2241 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2242 ;; Tracked objects:
  2243 ;;		On entry : 0/0
  2244 ;;		On exit  : 0/0
  2245 ;;		Unchanged: 0/0
  2246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2247 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2248 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2249 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2250 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2251 ;;Total ram usage:        7 bytes
  2252 ;; Hardware stack levels used: 1
  2253 ;; Hardware stack levels required when called: 2
  2254 ;; This function calls:
  2255 ;;		Nothing
  2256 ;; This function is called by:
  2257 ;;		_MQ2_initialize
  2258 ;;		_ADC_initialize
  2259 ;;		_gpio_pin_intialize
  2260 ;;		_Line_Tracker_intialize
  2261 ;;		_seven_segment_intialize
  2262 ;;		_button_intialize
  2263 ;;		_dc_motor_intialize
  2264 ;;		_DHT11_Read_Data
  2265 ;;		_keypad_intialize
  2266 ;;		_led_initialize
  2267 ;;		_relay_intialize
  2268 ;;		_Ultrasonic_Sensor_initialize
  2269 ;;		_Interrupt_INTx_PIN_INIT
  2270 ;;		_Interrupt_RBx_PIN_INIT
  2271 ;; This function uses a non-reentrant model
  2272 ;;
  2273                           
  2274                           	psect	text12
  2275   00101A                     __ptext12:
  2276                           	callstack 0
  2277   00101A                     _gpio_pin_direction_intialize:
  2278                           	callstack 25
  2279   00101A                     
  2280                           ;MCAL_Layer/GPIO/hal_gpio.c: 13: std_ReturneType gpio_pin_direction_intialize(const pin_
      +                          config_t *_pin_config);MCAL_Layer/GPIO/hal_gpio.c: 14: {;MCAL_Layer/GPIO/hal_gpio.c: 15:
      +                               std_ReturneType ret = (std_ReturneType)0x01 ;
  2281   00101A  0E01               	movlw	1
  2282   00101C  6E48               	movwf	gpio_pin_direction_intialize@ret^0,c
  2283                           
  2284                           ;MCAL_Layer/GPIO/hal_gpio.c: 16:     if((_pin_config == ((void*)0)) || (_pin_config->pin
      +                           > 8 -1))
  2285   00101E  5042               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  2286   001020  B4D8               	btfsc	status,2,c
  2287   001022  EF15  F008         	goto	u6191
  2288   001026  EF17  F008         	goto	u6190
  2289   00102A                     u6191:
  2290   00102A  EF27  F008         	goto	l7638
  2291   00102E                     u6190:
  2292   00102E  5042               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  2293   001030  6ED9               	movwf	fsr2l,c
  2294   001032  6ADA               	clrf	fsr2h,c
  2295   001034  30DF               	rrcf	223,w,c
  2296   001036  32E8               	rrcf	wreg,f,c
  2297   001038  32E8               	rrcf	wreg,f,c
  2298   00103A  0B07               	andlw	7
  2299   00103C  6E43               	movwf	??_gpio_pin_direction_intialize^0,c
  2300   00103E  0E07               	movlw	7
  2301   001040  6443               	cpfsgt	??_gpio_pin_direction_intialize^0,c
  2302   001042  EF25  F008         	goto	u6201
  2303   001046  EF27  F008         	goto	u6200
  2304   00104A                     u6201:
  2305   00104A  EF7E  F008         	goto	l7646
  2306   00104E                     u6200:
  2307   00104E                     l7638:
  2308                           
  2309                           ;MCAL_Layer/GPIO/hal_gpio.c: 17:         ret = (std_ReturneType)0x00 ;
  2310   00104E  0E00               	movlw	0
  2311   001050  6E48               	movwf	gpio_pin_direction_intialize@ret^0,c
  2312   001052  EF9E  F008         	goto	l7648
  2313   001056                     l7640:
  2314                           
  2315                           ;MCAL_Layer/GPIO/hal_gpio.c: 23:                 ((*((volatile uint8 *)(tris_register[_p
      +                          in_config->port]))) &= ~((uint8)1 << _pin_config->pin));
  2316   001056  5042               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  2317   001058  6ED9               	movwf	fsr2l,c
  2318   00105A  6ADA               	clrf	fsr2h,c
  2319   00105C  30DF               	rrcf	223,w,c
  2320   00105E  32E8               	rrcf	wreg,f,c
  2321   001060  32E8               	rrcf	wreg,f,c
  2322   001062  0B07               	andlw	7
  2323   001064  6E43               	movwf	??_gpio_pin_direction_intialize^0,c
  2324   001066  0E01               	movlw	1
  2325   001068  6E44               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  2326   00106A  2A43               	incf	??_gpio_pin_direction_intialize^0,f,c
  2327   00106C  EF3A  F008         	goto	u6214
  2328   001070                     u6215:
  2329   001070  90D8               	bcf	status,0,c
  2330   001072  3644               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  2331   001074                     u6214:
  2332   001074  2E43               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  2333   001076  EF38  F008         	goto	u6215
  2334   00107A  5044               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  2335   00107C  0AFF               	xorlw	255
  2336   00107E  6E45               	movwf	(??_gpio_pin_direction_intialize+2)^0,c
  2337   001080  5042               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  2338   001082  6ED9               	movwf	fsr2l,c
  2339   001084  6ADA               	clrf	fsr2h,c
  2340   001086  50DF               	movf	223,w,c
  2341   001088  0B07               	andlw	7
  2342   00108A  0D02               	mullw	2
  2343   00108C  50F3               	movf	243,w,c
  2344   00108E  0F74               	addlw	low _tris_register
  2345   001090  6ED9               	movwf	fsr2l,c
  2346   001092  6ADA               	clrf	fsr2h,c
  2347   001094  CFDE F046          	movff	postinc2,??_gpio_pin_direction_intialize+3
  2348   001098  CFDD F047          	movff	postdec2,??_gpio_pin_direction_intialize+4
  2349   00109C  C046  FFD9         	movff	??_gpio_pin_direction_intialize+3,fsr2l
  2350   0010A0  C047  FFDA         	movff	??_gpio_pin_direction_intialize+4,fsr2h
  2351   0010A4  5045               	movf	(??_gpio_pin_direction_intialize+2)^0,w,c
  2352   0010A6  16DF               	andwf	indf2,f,c
  2353                           
  2354                           ;MCAL_Layer/GPIO/hal_gpio.c: 24:                 break;
  2355   0010A8  EF9E  F008         	goto	l7648
  2356   0010AC                     l7642:
  2357                           
  2358                           ;MCAL_Layer/GPIO/hal_gpio.c: 26:                 ((*((volatile uint8 *)(tris_register[_p
      +                          in_config->port]))) |= ((uint8)1 << _pin_config->pin));
  2359   0010AC  5042               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  2360   0010AE  6ED9               	movwf	fsr2l,c
  2361   0010B0  6ADA               	clrf	fsr2h,c
  2362   0010B2  30DF               	rrcf	223,w,c
  2363   0010B4  32E8               	rrcf	wreg,f,c
  2364   0010B6  32E8               	rrcf	wreg,f,c
  2365   0010B8  0B07               	andlw	7
  2366   0010BA  6E43               	movwf	??_gpio_pin_direction_intialize^0,c
  2367   0010BC  0E01               	movlw	1
  2368   0010BE  6E44               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  2369   0010C0  2A43               	incf	??_gpio_pin_direction_intialize^0,f,c
  2370   0010C2  EF65  F008         	goto	u6224
  2371   0010C6                     u6225:
  2372   0010C6  90D8               	bcf	status,0,c
  2373   0010C8  3644               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  2374   0010CA                     u6224:
  2375   0010CA  2E43               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  2376   0010CC  EF63  F008         	goto	u6225
  2377   0010D0  5042               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  2378   0010D2  6ED9               	movwf	fsr2l,c
  2379   0010D4  6ADA               	clrf	fsr2h,c
  2380   0010D6  50DF               	movf	223,w,c
  2381   0010D8  0B07               	andlw	7
  2382   0010DA  0D02               	mullw	2
  2383   0010DC  50F3               	movf	243,w,c
  2384   0010DE  0F74               	addlw	low _tris_register
  2385   0010E0  6ED9               	movwf	fsr2l,c
  2386   0010E2  6ADA               	clrf	fsr2h,c
  2387   0010E4  CFDE F045          	movff	postinc2,??_gpio_pin_direction_intialize+2
  2388   0010E8  CFDD F046          	movff	postdec2,??_gpio_pin_direction_intialize+3
  2389   0010EC  C045  FFD9         	movff	??_gpio_pin_direction_intialize+2,fsr2l
  2390   0010F0  C046  FFDA         	movff	??_gpio_pin_direction_intialize+3,fsr2h
  2391   0010F4  5044               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  2392   0010F6  12DF               	iorwf	indf2,f,c
  2393                           
  2394                           ;MCAL_Layer/GPIO/hal_gpio.c: 27:                 break;
  2395   0010F8  EF9E  F008         	goto	l7648
  2396   0010FC                     l7646:
  2397   0010FC  5042               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  2398   0010FE  6ED9               	movwf	fsr2l,c
  2399   001100  6ADA               	clrf	fsr2h,c
  2400   001102  BCDF               	btfsc	indf2,6,c
  2401   001104  EF86  F008         	goto	u6231
  2402   001108  EF89  F008         	goto	u6230
  2403   00110C                     u6231:
  2404   00110C  0E01               	movlw	1
  2405   00110E  EF8A  F008         	goto	u6240
  2406   001112                     u6230:
  2407   001112  0E00               	movlw	0
  2408   001114                     u6240:
  2409   001114  6E43               	movwf	??_gpio_pin_direction_intialize^0,c
  2410   001116  6A44               	clrf	(??_gpio_pin_direction_intialize+1)^0,c
  2411                           
  2412                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2413                           ; Switch size 1, requested type "simple"
  2414                           ; Number of cases is 1, Range of values is 0 to 0
  2415                           ; switch strategies available:
  2416                           ; Name         Instructions Cycles
  2417                           ; simple_byte            4     3 (average)
  2418                           ;	Chosen strategy is simple_byte
  2419   001118  5044               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  2420   00111A  0A00               	xorlw	0	; case 0
  2421   00111C  B4D8               	btfsc	status,2,c
  2422   00111E  EF93  F008         	goto	l9048
  2423   001122  EF27  F008         	goto	l7638
  2424   001126                     l9048:
  2425                           
  2426                           ; Switch size 1, requested type "simple"
  2427                           ; Number of cases is 2, Range of values is 0 to 1
  2428                           ; switch strategies available:
  2429                           ; Name         Instructions Cycles
  2430                           ; simple_byte            7     4 (average)
  2431                           ;	Chosen strategy is simple_byte
  2432   001126  5043               	movf	??_gpio_pin_direction_intialize^0,w,c
  2433   001128  0A00               	xorlw	0	; case 0
  2434   00112A  B4D8               	btfsc	status,2,c
  2435   00112C  EF2B  F008         	goto	l7640
  2436   001130  0A01               	xorlw	1	; case 1
  2437   001132  B4D8               	btfsc	status,2,c
  2438   001134  EF56  F008         	goto	l7642
  2439   001138  EF27  F008         	goto	l7638
  2440   00113C                     l7648:
  2441                           
  2442                           ;MCAL_Layer/GPIO/hal_gpio.c: 32:     return ret ;
  2443   00113C  5048               	movf	gpio_pin_direction_intialize@ret^0,w,c
  2444   00113E  0012               	return		;funcret
  2445   001140                     __end_of_gpio_pin_direction_intialize:
  2446                           	callstack 0
  2447                           
  2448 ;; *************** function _INTERRUPT_MANGER_LOW *****************
  2449 ;; Defined at:
  2450 ;;		line 12 in file "MCAL_Layer/Interrupts/mcal_interrupt_manger.c"
  2451 ;; Parameters:    Size  Location     Type
  2452 ;;		None
  2453 ;; Auto vars:     Size  Location     Type
  2454 ;;		None
  2455 ;; Return value:  Size  Location     Type
  2456 ;;                  1    wreg      void 
  2457 ;; Registers used:
  2458 ;;		None
  2459 ;; Tracked objects:
  2460 ;;		On entry : 0/0
  2461 ;;		On exit  : 0/0
  2462 ;;		Unchanged: 0/0
  2463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2466 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2467 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2468 ;;Total ram usage:        1 bytes
  2469 ;; Hardware stack levels used: 1
  2470 ;; Hardware stack levels required when called: 1
  2471 ;; This function calls:
  2472 ;;		Nothing
  2473 ;; This function is called by:
  2474 ;;		Interrupt level 1
  2475 ;; This function uses a non-reentrant model
  2476 ;;
  2477                           
  2478                           	psect	intcodelo
  2479   000018                     __pintcodelo:
  2480                           	callstack 0
  2481   000018                     _INTERRUPT_MANGER_LOW:
  2482                           	callstack 24
  2483                           
  2484                           ;incstack = 0
  2485   000018  805D               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  2486   00001A  CFE0 F041          	movff	bsr,??_INTERRUPT_MANGER_LOW
  2487   00001E  C041  FFE0         	movff	??_INTERRUPT_MANGER_LOW,bsr
  2488   000022  905D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2489   000024  0010               	retfie	
  2490   000026                     __end_of_INTERRUPT_MANGER_LOW:
  2491                           	callstack 0
  2492                           
  2493 ;; *************** function _INTERRUPT_MANGER_HIGH *****************
  2494 ;; Defined at:
  2495 ;;		line 7 in file "MCAL_Layer/Interrupts/mcal_interrupt_manger.c"
  2496 ;; Parameters:    Size  Location     Type
  2497 ;;		None
  2498 ;; Auto vars:     Size  Location     Type
  2499 ;;		None
  2500 ;; Return value:  Size  Location     Type
  2501 ;;                  1    wreg      void 
  2502 ;; Registers used:
  2503 ;;		None
  2504 ;; Tracked objects:
  2505 ;;		On entry : 0/0
  2506 ;;		On exit  : 0/0
  2507 ;;		Unchanged: 0/0
  2508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2512 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2513 ;;Total ram usage:        0 bytes
  2514 ;; Hardware stack levels used: 1
  2515 ;; This function calls:
  2516 ;;		Nothing
  2517 ;; This function is called by:
  2518 ;;		Interrupt level 2
  2519 ;; This function uses a non-reentrant model
  2520 ;;
  2521                           
  2522                           	psect	intcode
  2523   000008                     __pintcode:
  2524                           	callstack 0
  2525   000008                     _INTERRUPT_MANGER_HIGH:
  2526                           	callstack 24
  2527                           
  2528                           ;incstack = 0
  2529   000008  825D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2530   00000A  EFF9  F00B         	goto	int_func
  2531                           
  2532                           	psect	intcode_body
  2533   0017F2                     __pintcode_body:
  2534                           	callstack 24
  2535   0017F2                     int_func:
  2536                           	callstack 24
  2537   0017F2  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2538   0017F4  0011               	retfie		f
  2539   0017F6                     __end_of_INTERRUPT_MANGER_HIGH:
  2540                           	callstack 0
  2541                           
  2542                           	psect	rparam
  2543   000000                     
  2544                           	psect	temp
  2545   00005D                     btemp:
  2546                           	callstack 0
  2547   00005D                     	ds	1
  2548   000000                     int$flags	set	btemp
  2549   000000                     wtemp8	set	btemp+1
  2550   000000                     ttemp5	set	btemp+1
  2551   000000                     ttemp6	set	btemp+4
  2552   000000                     ttemp7	set	btemp+8
  2553                           
  2554                           	psect	config
  2555                           
  2556                           ; Padding undefined space
  2557   300000                     	org	3145728
  2558   300000  FF                 	db	255
  2559                           
  2560                           ;Config register CONFIG1H @ 0x300001
  2561                           ;	Oscillator Selection bits
  2562                           ;	FOSC = HS, HS oscillator
  2563                           ;	Fail-Safe Clock Monitor Enable bit
  2564                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2565                           ;	Internal/External Oscillator Switchover bit
  2566                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2567   300001                     	org	3145729
  2568   300001  02                 	db	2
  2569                           
  2570                           ;Config register CONFIG2L @ 0x300002
  2571                           ;	Power-up Timer Enable bit
  2572                           ;	PWRTEN = OFF, PWRT disabled
  2573                           ;	Brown-out Reset Enable bits
  2574                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  2575                           ;	Brown Out Reset Voltage bits
  2576                           ;	BORV = 18, VBOR set to 1.8 V nominal
  2577   300002                     	org	3145730
  2578   300002  1F                 	db	31
  2579                           
  2580                           ;Config register CONFIG2H @ 0x300003
  2581                           ;	Watchdog Timer Enable bit
  2582                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
  2583                           ;	Watchdog Timer Postscale Select bits
  2584                           ;	WDTPS = 32768, 1:32768
  2585   300003                     	org	3145731
  2586   300003  1E                 	db	30
  2587                           
  2588                           ; Padding undefined space
  2589   300004                     	org	3145732
  2590   300004  FF                 	db	255
  2591                           
  2592                           ;Config register CONFIG3H @ 0x300005
  2593                           ;	CCP2 MUX bit
  2594                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  2595                           ;	PORTB A/D Enable bit
  2596                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  2597                           ;	Low-Power Timer1 Oscillator Enable bit
  2598                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2599                           ;	HFINTOSC Fast Start-up
  2600                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
  2601                           ;	MCLR Pin Enable bit
  2602                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2603   300005                     	org	3145733
  2604   300005  89                 	db	137
  2605                           
  2606                           ;Config register CONFIG4L @ 0x300006
  2607                           ;	Stack Full/Underflow Reset Enable bit
  2608                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2609                           ;	Single-Supply ICSP Enable bit
  2610                           ;	LVP = OFF, Single-Supply ICSP disabled
  2611                           ;	Extended Instruction Set Enable bit
  2612                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2613                           ;	Background Debugger Enable bit
  2614                           ;	DEBUG = 0x1, unprogrammed default
  2615   300006                     	org	3145734
  2616   300006  81                 	db	129
  2617                           
  2618                           ; Padding undefined space
  2619   300007                     	org	3145735
  2620   300007  FF                 	db	255
  2621                           
  2622                           ;Config register CONFIG5L @ 0x300008
  2623                           ;	Code Protection Block 0
  2624                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  2625                           ;	Code Protection Block 1
  2626                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  2627                           ;	Code Protection Block 2
  2628                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  2629                           ;	Code Protection Block 3
  2630                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  2631   300008                     	org	3145736
  2632   300008  0F                 	db	15
  2633                           
  2634                           ;Config register CONFIG5H @ 0x300009
  2635                           ;	Boot Block Code Protection bit
  2636                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  2637                           ;	Data EEPROM Code Protection bit
  2638                           ;	CPD = OFF, Data EEPROM not code-protected
  2639   300009                     	org	3145737
  2640   300009  C0                 	db	192
  2641                           
  2642                           ;Config register CONFIG6L @ 0x30000A
  2643                           ;	Write Protection Block 0
  2644                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  2645                           ;	Write Protection Block 1
  2646                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  2647                           ;	Write Protection Block 2
  2648                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  2649                           ;	Write Protection Block 3
  2650                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
  2651   30000A                     	org	3145738
  2652   30000A  0F                 	db	15
  2653                           
  2654                           ;Config register CONFIG6H @ 0x30000B
  2655                           ;	Configuration Register Write Protection bit
  2656                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2657                           ;	Boot Block Write Protection bit
  2658                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  2659                           ;	Data EEPROM Write Protection bit
  2660                           ;	WRTD = OFF, Data EEPROM not write-protected
  2661   30000B                     	org	3145739
  2662   30000B  E0                 	db	224
  2663                           
  2664                           ;Config register CONFIG7L @ 0x30000C
  2665                           ;	Table Read Protection Block 0
  2666                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  2667                           ;	Table Read Protection Block 1
  2668                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2669                           ;	Table Read Protection Block 2
  2670                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  2671                           ;	Table Read Protection Block 3
  2672                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  2673   30000C                     	org	3145740
  2674   30000C  0F                 	db	15
  2675                           
  2676                           ;Config register CONFIG7H @ 0x30000D
  2677                           ;	Boot Block Table Read Protection bit
  2678                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2679   30000D                     	org	3145741
  2680   30000D  40                 	db	64
  2681                           tosu	equ	0xFFF
  2682                           tosh	equ	0xFFE
  2683                           tosl	equ	0xFFD
  2684                           stkptr	equ	0xFFC
  2685                           pclatu	equ	0xFFB
  2686                           pclath	equ	0xFFA
  2687                           pcl	equ	0xFF9
  2688                           tblptru	equ	0xFF8
  2689                           tblptrh	equ	0xFF7
  2690                           tblptrl	equ	0xFF6
  2691                           tablat	equ	0xFF5
  2692                           prodh	equ	0xFF4
  2693                           prodl	equ	0xFF3
  2694                           indf0	equ	0xFEF
  2695                           postinc0	equ	0xFEE
  2696                           postdec0	equ	0xFED
  2697                           preinc0	equ	0xFEC
  2698                           plusw0	equ	0xFEB
  2699                           fsr0h	equ	0xFEA
  2700                           fsr0l	equ	0xFE9
  2701                           wreg	equ	0xFE8
  2702                           indf1	equ	0xFE7
  2703                           postinc1	equ	0xFE6
  2704                           postdec1	equ	0xFE5
  2705                           preinc1	equ	0xFE4
  2706                           plusw1	equ	0xFE3
  2707                           fsr1h	equ	0xFE2
  2708                           fsr1l	equ	0xFE1
  2709                           bsr	equ	0xFE0
  2710                           indf2	equ	0xFDF
  2711                           postinc2	equ	0xFDE
  2712                           postdec2	equ	0xFDD
  2713                           preinc2	equ	0xFDC
  2714                           plusw2	equ	0xFDB
  2715                           fsr2h	equ	0xFDA
  2716                           fsr2l	equ	0xFD9
  2717                           status	equ	0xFD8

Data Sizes:
    Strings     8
    Constant    16
    Data        240
    BSS         74
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     17      92
    BANK0           160      0     160
    BANK1           256      2      81
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    adc_1$ADC_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    adc_2$ADC_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    adc_3$ADC_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    ADC_get_conversion_result@_adc$ADC_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    ADC_initialize@_adc	PTR const struct . size(1) Largest target is 9
		 -> mq2_pin(BANK0[9]), 

    ADC_initialize@_adc$ADC_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    ADC_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 2
		 -> mq2_pin$ADC_INTERRUPT_HANDLER(BANK0[2]), NULL(), 

    CCP1_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    CCP2_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    ccp_1_obj$CCP1_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    ccp_1_obj$CCP2_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    ccp_1_obj$ccp_timer2$TIMER2_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    CCP_deinitialize@ccp_obj$CCP1_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    CCP_deinitialize@ccp_obj$CCP2_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    CCP_deinitialize@ccp_obj$ccp_timer2$TIMER2_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    CCP_initialize@ccp_obj$CCP1_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    CCP_initialize@ccp_obj$CCP2_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    CCP_initialize@ccp_obj$ccp_timer2$TIMER2_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    ccp_pwm_duty_cycle@ccp_obj$CCP1_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    ccp_pwm_duty_cycle@ccp_obj$CCP2_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    ccp_pwm_duty_cycle@ccp_obj$ccp_timer2$TIMER2_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    ccp_start_pwm@ccp_obj$CCP1_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    ccp_start_pwm@ccp_obj$CCP2_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    ccp_start_pwm@ccp_obj$ccp_timer2$TIMER2_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    ccp_stop_pwm@ccp_obj$CCP1_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    ccp_stop_pwm@ccp_obj$CCP2_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    ccp_stop_pwm@ccp_obj$ccp_timer2$TIMER2_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    DHT11_Read_Data@dht11_obj$timer3_dht11$T3MER3_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    EUSART_Framing_Error_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_Overrun_Error_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    eusart_pin$EUSART_Framing_Error_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    eusart_pin$EUSART_Overrun_Error_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    eusart_pin$EUSART_Rx_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    eusart_pin$EUSART_Tx_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_RB_Calculation@eusart_obj$EUSART_Framing_Error_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_RB_Calculation@eusart_obj$EUSART_Overrun_Error_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_RB_Calculation@eusart_obj$EUSART_Rx_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_RB_Calculation@eusart_obj$EUSART_Tx_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_RX_initialize@eusart_obj$EUSART_Framing_Error_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_RX_initialize@eusart_obj$EUSART_Overrun_Error_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_RX_initialize@eusart_obj$EUSART_Rx_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_RX_initialize@eusart_obj$EUSART_Tx_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_Rx_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_TX_initialize@eusart_obj$EUSART_Framing_Error_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_TX_initialize@eusart_obj$EUSART_Overrun_Error_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_TX_initialize@eusart_obj$EUSART_Rx_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_TX_initialize@eusart_obj$EUSART_Tx_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_Tx_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    gpio_pin_direction_intialize@_pin_config	PTR const struct . size(1) Largest target is 9
		 -> lcd_1(BANK0[6]), lcd_1$lcd_data(BANK0[4]), lcd_1$lcd_en(BANK0[1]), lcd_1$lcd_rs(BANK0[1]), 
		 -> led_initialize@pin_obj(COMRAM[1]), mq2_pin(BANK0[9]), relay_intialize@pin_obj(COMRAM[1]), 

    gpio_pin_intialize@_pin_config	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(BANK0[6]), lcd_1$lcd_data(BANK0[4]), lcd_1$lcd_en(BANK0[1]), lcd_1$lcd_rs(BANK0[1]), 

    gpio_pin_write_logic@_pin_config	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(BANK0[6]), lcd_1$lcd_data(BANK0[4]), lcd_1$lcd_en(BANK0[1]), lcd_1$lcd_rs(BANK0[1]), 
		 -> led_turn_off@pin_obj(COMRAM[1]), led_turn_on@pin_obj(COMRAM[1]), relay_turn_off@pin_obj(COMRAM[1]), relay_turn_on@pin_obj(COMRAM[1]), 

    I2C_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    i2c_p$I2C_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    i2c_p$I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    i2c_p$I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    int0_obj$external_interrupt	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_APP_ISR(), INT1_APP_ISR(), INT2_APP_ISR(), 

    int1_obj$external_interrupt	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_APP_ISR(), INT1_APP_ISR(), INT2_APP_ISR(), 

    int2_obj$external_interrupt	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_APP_ISR(), INT1_APP_ISR(), INT2_APP_ISR(), 

    Interrupt_handler_INT0	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_APP_ISR(), INT1_APP_ISR(), INT2_APP_ISR(), NULL(), 

    Interrupt_handler_INT1	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_APP_ISR(), INT1_APP_ISR(), INT2_APP_ISR(), NULL(), 

    Interrupt_handler_INT2	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_APP_ISR(), INT1_APP_ISR(), INT2_APP_ISR(), NULL(), 

    Interrupt_handler_RB4_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> RB4_HIGH_Int_APP_ISR(), RB5_HIGH_Int_APP_ISR(), RB6_HIGH_Int_APP_ISR(), RB7_HIGH_Int_APP_ISR(), 
		 -> NULL(), 

    Interrupt_handler_RB4_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> RB4_LOW_Int_APP_ISR(), RB5_LOW_Int_APP_ISR(), RB6_LOW_Int_APP_ISR(), RB7_LOW_Int_APP_ISR(), 
		 -> NULL(), 

    Interrupt_handler_RB5_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> RB4_HIGH_Int_APP_ISR(), RB5_HIGH_Int_APP_ISR(), RB6_HIGH_Int_APP_ISR(), RB7_HIGH_Int_APP_ISR(), 
		 -> NULL(), 

    Interrupt_handler_RB5_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> RB4_LOW_Int_APP_ISR(), RB5_LOW_Int_APP_ISR(), RB6_LOW_Int_APP_ISR(), RB7_LOW_Int_APP_ISR(), 
		 -> NULL(), 

    Interrupt_handler_RB6_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> RB4_HIGH_Int_APP_ISR(), RB5_HIGH_Int_APP_ISR(), RB6_HIGH_Int_APP_ISR(), RB7_HIGH_Int_APP_ISR(), 
		 -> NULL(), 

    Interrupt_handler_RB6_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> RB4_LOW_Int_APP_ISR(), RB5_LOW_Int_APP_ISR(), RB6_LOW_Int_APP_ISR(), RB7_LOW_Int_APP_ISR(), 
		 -> NULL(), 

    Interrupt_handler_RB7_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> RB4_HIGH_Int_APP_ISR(), RB5_HIGH_Int_APP_ISR(), RB6_HIGH_Int_APP_ISR(), RB7_HIGH_Int_APP_ISR(), 
		 -> NULL(), 

    Interrupt_handler_RB7_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> RB4_LOW_Int_APP_ISR(), RB5_LOW_Int_APP_ISR(), RB6_LOW_Int_APP_ISR(), RB7_LOW_Int_APP_ISR(), 
		 -> NULL(), 

    Interrupt_INTx_CLEAR_FLAG@int_obj$external_interrupt	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_APP_ISR(), INT1_APP_ISR(), INT2_APP_ISR(), 

    Interrupt_INTx_DISABLE@int_obj$external_interrupt	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_APP_ISR(), INT1_APP_ISR(), INT2_APP_ISR(), 

    Interrupt_INTx_EDGE_INIT@int_obj$external_interrupt	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_APP_ISR(), INT1_APP_ISR(), INT2_APP_ISR(), 

    Interrupt_INTx_ENABLE@int_obj$external_interrupt	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_APP_ISR(), INT1_APP_ISR(), INT2_APP_ISR(), 

    Interrupt_INTx_PIN_INIT@int_obj$external_interrupt	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_APP_ISR(), INT1_APP_ISR(), INT2_APP_ISR(), 

    Interrupt_INTx_PRIORITY_INIT@int_obj$external_interrupt	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_APP_ISR(), INT1_APP_ISR(), INT2_APP_ISR(), 

    Interrupt_INTx_SET_Interrupt_handler@int_obj$external_interrupt	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_APP_ISR(), INT1_APP_ISR(), INT2_APP_ISR(), 

    Interrupt_RBx_ENABLE@int_obj$external_interrupt_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> RB4_HIGH_Int_APP_ISR(), RB5_HIGH_Int_APP_ISR(), RB6_HIGH_Int_APP_ISR(), RB7_HIGH_Int_APP_ISR(), 

    Interrupt_RBx_ENABLE@int_obj$external_interrupt_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> RB4_LOW_Int_APP_ISR(), RB5_LOW_Int_APP_ISR(), RB6_LOW_Int_APP_ISR(), RB7_LOW_Int_APP_ISR(), 

    Interrupt_RBx_PIN_INIT@int_obj$external_interrupt_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> RB4_HIGH_Int_APP_ISR(), RB5_HIGH_Int_APP_ISR(), RB6_HIGH_Int_APP_ISR(), RB7_HIGH_Int_APP_ISR(), 

    Interrupt_RBx_PIN_INIT@int_obj$external_interrupt_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> RB4_LOW_Int_APP_ISR(), RB5_LOW_Int_APP_ISR(), RB6_LOW_Int_APP_ISR(), RB7_LOW_Int_APP_ISR(), 

    Interrupt_RBx_PRIORITY_INIT@int_obj$external_interrupt_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> RB4_HIGH_Int_APP_ISR(), RB5_HIGH_Int_APP_ISR(), RB6_HIGH_Int_APP_ISR(), RB7_HIGH_Int_APP_ISR(), 

    Interrupt_RBx_PRIORITY_INIT@int_obj$external_interrupt_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> RB4_LOW_Int_APP_ISR(), RB5_LOW_Int_APP_ISR(), RB6_LOW_Int_APP_ISR(), RB7_LOW_Int_APP_ISR(), 

    Interrupt_RBx_SET_Interrupt_handler@int_obj$external_interrupt_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> RB4_HIGH_Int_APP_ISR(), RB5_HIGH_Int_APP_ISR(), RB6_HIGH_Int_APP_ISR(), RB7_HIGH_Int_APP_ISR(), 

    Interrupt_RBx_SET_Interrupt_handler@int_obj$external_interrupt_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> RB4_LOW_Int_APP_ISR(), RB5_LOW_Int_APP_ISR(), RB6_LOW_Int_APP_ISR(), RB7_LOW_Int_APP_ISR(), 

    JOT_STICK_initialize@joy_stick_obj$X_AXIS$ADC_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    JOT_STICK_initialize@joy_stick_obj$Y_AXIS$ADC_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    JOT_STICK_READ_X_Y_switch@joy_stick_obj$X_AXIS$ADC_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    JOT_STICK_READ_X_Y_switch@joy_stick_obj$Y_AXIS$ADC_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    lat_register	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRlllllll[1]), LATB(BITBIGSFRlllllh[1]), LATC(BITBIGSFRlllllh[1]), LATD(BITBIGSFRlllllh[1]), 
		 -> LATE(BITBIGSFRlllllh[1]), 

    lcd_4_intialize@lcd	PTR struct . size(1) Largest target is 6
		 -> lcd_1(BANK0[6]), 

    lcd_4_send_command@lcd	PTR struct . size(1) Largest target is 6
		 -> lcd_1(BANK0[6]), 

    lcd_4bit_send_enable_signale@lcd	PTR struct . size(1) Largest target is 6
		 -> lcd_1(BANK0[6]), 

    lcd_send_4bit@lcd	PTR struct . size(1) Largest target is 6
		 -> lcd_1(BANK0[6]), 

    LM35_initialize@lm35_obj$lm35_pin$ADC_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    lm35_mc$lm35_pin$ADC_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    LM35_Read_Temperature@lm35_obj$lm35_pin$ADC_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    MQ2_initialize@mq2_obj	PTR const struct . size(1) Largest target is 9
		 -> mq2_pin(BANK0[9]), 

    MQ2_initialize@mq2_obj$MQ2_pin_analog$ADC_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    mq2_pin$ADC_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    mq2_pin$MQ2_pin_analog$ADC_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    MQ2_Read_Data@mq2_obj$MQ2_pin_analog$ADC_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_initialize@i2c_obj$I2C_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_initialize@i2c_obj$I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_initialize@i2c_obj$I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    port_register	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRlllllll[1]), PORTB(BITBIGSFRllllllh[1]), PORTC(BITBIGSFRllllllh[1]), PORTD(BITBIGSFRllllllh[1]), 

    rb4_int_obj$external_interrupt_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> RB4_HIGH_Int_APP_ISR(), RB5_HIGH_Int_APP_ISR(), RB6_HIGH_Int_APP_ISR(), RB7_HIGH_Int_APP_ISR(), 

    rb4_int_obj$external_interrupt_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> RB4_LOW_Int_APP_ISR(), RB5_LOW_Int_APP_ISR(), RB6_LOW_Int_APP_ISR(), RB7_LOW_Int_APP_ISR(), 

    rb5_int_obj$external_interrupt_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> RB4_HIGH_Int_APP_ISR(), RB5_HIGH_Int_APP_ISR(), RB6_HIGH_Int_APP_ISR(), RB7_HIGH_Int_APP_ISR(), 

    rb5_int_obj$external_interrupt_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> RB4_LOW_Int_APP_ISR(), RB5_LOW_Int_APP_ISR(), RB6_LOW_Int_APP_ISR(), RB7_LOW_Int_APP_ISR(), 

    rb6_int_obj$external_interrupt_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> RB4_HIGH_Int_APP_ISR(), RB5_HIGH_Int_APP_ISR(), RB6_HIGH_Int_APP_ISR(), RB7_HIGH_Int_APP_ISR(), 

    rb6_int_obj$external_interrupt_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> RB4_LOW_Int_APP_ISR(), RB5_LOW_Int_APP_ISR(), RB6_LOW_Int_APP_ISR(), RB7_LOW_Int_APP_ISR(), 

    rb7_int_obj$external_interrupt_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> RB4_HIGH_Int_APP_ISR(), RB5_HIGH_Int_APP_ISR(), RB6_HIGH_Int_APP_ISR(), RB7_HIGH_Int_APP_ISR(), 

    rb7_int_obj$external_interrupt_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> RB4_LOW_Int_APP_ISR(), RB5_LOW_Int_APP_ISR(), RB6_LOW_Int_APP_ISR(), RB7_LOW_Int_APP_ISR(), 

    S1107$TIMER0_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S1254$external_interrupt	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_APP_ISR(), INT1_APP_ISR(), INT2_APP_ISR(), 

    S1274$external_interrupt_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> RB4_HIGH_Int_APP_ISR(), RB5_HIGH_Int_APP_ISR(), RB6_HIGH_Int_APP_ISR(), RB7_HIGH_Int_APP_ISR(), 

    S1274$external_interrupt_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> RB4_LOW_Int_APP_ISR(), RB5_LOW_Int_APP_ISR(), RB6_LOW_Int_APP_ISR(), RB7_LOW_Int_APP_ISR(), 

    S1371$TIMER2_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S1398$CCP1_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S1398$CCP2_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S1470$EUSART_Framing_Error_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S1470$EUSART_Overrun_Error_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S1470$EUSART_Rx_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S1470$EUSART_Tx_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S1500$I2C_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    S1500$I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    S1500$I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    S4981$TIMER1_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    S558$T3MER3_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    S6088$buffer	PTR unsigned char  size(2) Largest target is 0

    S6088$source	PTR const unsigned char  size(2) Largest target is 0

    S629$ADC_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    select_result_format@_adc	PTR const struct . size(1) Largest target is 9
		 -> mq2_pin(BANK0[9]), 

    select_result_format@_adc$ADC_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    select_voltage@_adc	PTR const struct . size(1) Largest target is 9
		 -> mq2_pin(BANK0[9]), 

    select_voltage@_adc$ADC_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    servo$timer_pin$TIMER0_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    sp__memset	PTR void  size(2) Largest target is 0

    Timer0_initialize@timer_obj$TIMER0_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    TIMER0_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    timer0_select_mode@timer_obj$TIMER0_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    timer0_select_size@timer_obj$TIMER0_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Timer1_initialize@timer_obj$TIMER1_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    TIMER1_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    timer1_select_mode@timer_obj$TIMER1_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    Timer2_initialize@timer_obj$TIMER2_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    TIMER2_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Timer3_initialize@timer_obj$T3MER3_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    TIMER3_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    timer3_select_mode@timer_obj$T3MER3_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    tris_register	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRlllllll[1]), TRISB(ABS[1]), TRISC(SFR[1]), TRISD(BITBIGSFRlllh[1]), 
		 -> TRISE(BITBIGSFRlllh[1]), 

    Ultrasonic_Sensor_Get_Distance@US_obj$timer_pin$TIMER0_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Ultrasonic_Sensor_initialize@US_obj$timer_pin$TIMER0_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    US_pin$timer_pin$TIMER0_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    vfprintf$0	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf$1	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[5]), 

    vfprintf$2	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 


Critical Paths under _main in COMRAM

    _ecu_layer_initialize->_lcd_4_intialize
    _lcd_4_intialize->_lcd_4_send_command
    _lcd_4_send_command->_lcd_send_4bit
    _lcd_send_4bit->_gpio_pin_write_logic
    _lcd_4bit_send_enable_signale->_gpio_pin_write_logic
    _gpio_pin_intialize->_gpio_pin_write_logic
    _MQ2_initialize->_ADC_initialize
    _ADC_initialize->_gpio_pin_direction_intialize

Critical Paths under _INTERRUPT_MANGER_LOW in COMRAM

    None.

Critical Paths under _INTERRUPT_MANGER_HIGH in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_MANGER_LOW in BANK0

    None.

Critical Paths under _INTERRUPT_MANGER_HIGH in BANK0

    None.

Critical Paths under _main in BANK1

    _ecu_layer_initialize->_lcd_4_intialize

Critical Paths under _INTERRUPT_MANGER_LOW in BANK1

    None.

Critical Paths under _INTERRUPT_MANGER_HIGH in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_MANGER_LOW in BANK2

    None.

Critical Paths under _INTERRUPT_MANGER_HIGH in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_MANGER_LOW in BANK3

    None.

Critical Paths under _INTERRUPT_MANGER_HIGH in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_MANGER_LOW in BANK4

    None.

Critical Paths under _INTERRUPT_MANGER_HIGH in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_MANGER_LOW in BANK5

    None.

Critical Paths under _INTERRUPT_MANGER_HIGH in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_MANGER_LOW in BANK6

    None.

Critical Paths under _INTERRUPT_MANGER_HIGH in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_MANGER_LOW in BANK7

    None.

Critical Paths under _INTERRUPT_MANGER_HIGH in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_MANGER_LOW in BANK8

    None.

Critical Paths under _INTERRUPT_MANGER_HIGH in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_MANGER_LOW in BANK9

    None.

Critical Paths under _INTERRUPT_MANGER_HIGH in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_MANGER_LOW in BANK10

    None.

Critical Paths under _INTERRUPT_MANGER_HIGH in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_MANGER_LOW in BANK11

    None.

Critical Paths under _INTERRUPT_MANGER_HIGH in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_MANGER_LOW in BANK12

    None.

Critical Paths under _INTERRUPT_MANGER_HIGH in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_MANGER_LOW in BANK13

    None.

Critical Paths under _INTERRUPT_MANGER_HIGH in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_MANGER_LOW in BANK14

    None.

Critical Paths under _INTERRUPT_MANGER_HIGH in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_MANGER_LOW in BANK15

    None.

Critical Paths under _INTERRUPT_MANGER_HIGH in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   40834
               _ecu_layer_initialize
 ---------------------------------------------------------------------------------
 (1) _ecu_layer_initialize                                 1     1      0   40834
                     _MQ2_initialize
                    _lcd_4_intialize
 ---------------------------------------------------------------------------------
 (2) _lcd_4_intialize                                      4     3      1   35169
                                             15 COMRAM     2     1      1
                                              0 BANK1      2     2      0
                 _gpio_pin_intialize
                 _lcd_4_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_4_send_command                                   3     1      2   24578
                                             12 COMRAM     3     1      2
               _gpio_pin_write_logic
       _lcd_4bit_send_enable_signale
                      _lcd_send_4bit
 ---------------------------------------------------------------------------------
 (4) _lcd_send_4bit                                        3     1      2    7788
                                              9 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _lcd_4bit_send_enable_signale                         2     1      1    7233
                                              9 COMRAM     2     1      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_intialize                                   3     2      1    9923
                                              9 COMRAM     3     2      1
       _gpio_pin_direction_intialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_write_logic                                 8     6      2    6737
                                              1 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (2) _MQ2_initialize                                       2     1      1    5656
                                             11 COMRAM     2     1      1
                     _ADC_initialize
       _gpio_pin_direction_intialize
 ---------------------------------------------------------------------------------
 (3) _ADC_initialize                                       3     2      1    3190
                                              8 COMRAM     3     2      1
       _gpio_pin_direction_intialize
               _select_result_format
                     _select_voltage
 ---------------------------------------------------------------------------------
 (4) _select_voltage                                       1     0      1     120
                                              1 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (4) _select_result_format                                 1     0      1     120
                                              1 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_direction_intialize                         7     6      1    2237
                                              1 COMRAM     7     6      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_MANGER_LOW                                 1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INTERRUPT_MANGER_HIGH                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ecu_layer_initialize
     _MQ2_initialize
       _ADC_initialize
         _gpio_pin_direction_intialize
         _select_result_format
         _select_voltage
       _gpio_pin_direction_intialize
     _lcd_4_intialize
       _gpio_pin_intialize
         _gpio_pin_direction_intialize
         _gpio_pin_write_logic
       _lcd_4_send_command
         _gpio_pin_write_logic
         _lcd_4bit_send_enable_signale
           _gpio_pin_write_logic
         _lcd_send_4bit
           _gpio_pin_write_logic

 _INTERRUPT_MANGER_LOW (ROOT)

 _INTERRUPT_MANGER_HIGH (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      49        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      2      51       7       31.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      A0       5      100.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     11      5C       1       97.9%
BITBIGSFRllllll     20      0       0      48        0.0%
BITBIGSFRhhllhh     18      0       0      38        0.0%
BITBIGSFRhhh         D      0       0      37        0.0%
BITBIGSFRlllh        6      0       0      45        0.0%
BITBIGSFRllllll      5      0       0      47        0.0%
BITBIGSFRllhlhl      4      0       0      43        0.0%
BITBIGSFRlllllh      4      0       0      46        0.0%
BITBIGSFRhhlll       4      0       0      39        0.0%
BITBIGSFRllhlll      3      0       0      44        0.0%
BITBIGSFRllhlhl      1      0       0      42        0.0%
BITBIGSFRllhlhh      1      0       0      41        0.0%
BITBIGSFRllhh        1      0       0      40        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     14D      12        0.0%
DATA                 0      0     14D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Thu Aug 22 12:04:56 2024

                         ?_lcd_send_4bit 004A                              _SSPSTATbits 0FC7  
                                     bsr 0FE0                                      l104 133E  
                                    l109 167C                                      l224 1790  
                                    l219 15AE                                      l730 1424  
                                    l724 1358                                      l495 17C6  
                                    l657 17D8                                      l781 1750  
                                    l783 1752                                      l791 1706  
                                    l794 170E                                      l787 16E6  
                                    l796 1712                                      _PR2 0FCB  
                                    _ret 0037                      led_initialize@F3732 0040  
                                    wreg 0FE8                                     l1155 113E  
                                   l1174 124E                                     l1196 1620  
                                   l1964 17DE                                     l1965 17DE  
                                   l9004 17DA                                     l7620 11D2  
                                   l7612 1140                                     l7700 1632  
                                   l7710 1350                                     l9046 1236  
                                   l7614 1154                                     l7702 163A  
                                   l9048 1126                                     l7640 1056  
                                   l7720 13B8                                     l7712 135A  
                                   l7624 1222                                     l7616 1174  
                                   l7704 167A                                     l7642 10AC  
                                   l7634 101A                                     l5970 172C  
                                   l7730 1408                                     l7722 13CA  
                                   l7714 13AC                                     l7618 117C  
                                   l7626 124C                                     l7636 102E  
                                   l5972 1732                                     l7732 140C  
                                   l7724 13CC                                     l7716 13B4  
                                   l7708 1340                                     l7660 1556  
                                   l7646 10FC                                     l7638 104E  
                                   l5974 174A                                     l7734 141C  
                                   l7726 13E6                                     l7718 13B6  
                                   l7670 1764                                     l7662 15A8  
                                   l7742 1250                                     l7648 113C  
                                   l5968 1714                                     l5976 16CE  
                                   l7736 141E                                     l7728 13EE  
                                   l7672 176C                                     l7664 15AC  
                                   l7656 153E                                     l7760 12AA  
                                   l7744 1266                                     l5978 16EE  
                                   l7738 1422                                     l7690 15F2  
                                   l7682 15B0                                     l7674 1778  
                                   l7658 154E                                     l7770 12F0  
                                   l7762 12B8                                     l7754 128A  
                                   l7746 126E                                     l7692 1606  
                                   l7684 15C0                                     l7676 1780  
                                   l7668 1754                                     l7780 132C  
                                   l7772 12FC                                     l7764 12C4  
                                   l7756 1296                                     l7748 1286  
                                   l7870 17A2                                     l7694 161E  
                                   l7686 15E0                                     l7678 178E  
                                   l7774 1308                                     l7766 12DE  
                                   l7758 129A                                     l7782 133C  
                                   l7872 17AA                                     l7688 15E8  
                                   l7776 1314                                     l7768 12E4  
                                   l7874 17C0                                     l7698 1622  
                                   l7778 1320                                     l7954 17C8  
                                   l7876 17C4                                     l7868 1792  
                                   l7956 17C8                                     l7958 17D0  
                                   STR_1 1016                                     STR_3 1011  
                                   _LATA 0F89                                     _LATB 0F8A  
                                   _LATC 0F8B                                     _LATD 0F8C  
                                   _LATE 0F8D                                     u4030 172C  
                                   u4031 1728                                     u4040 174A  
                                   u4041 1746                                     u4050 16E6  
                                   u4051 16E2                                     u4060 1706  
                                   u4061 1702                                     u6200 104E  
                                   u6201 104A                                     u6300 1632  
                                   u6301 162E                                     u6230 1112  
                                   u6214 1074                                     u6310 1350  
                                   u6150 1154                                     u6231 110C  
                                   u6215 1070                                     u6311 134C  
                                   u6151 1150                                     u6240 1114  
                                   u6224 10CA                                     u6320 13E6  
                                   u6160 1174                                     u6225 10C6  
                                   u6321 13E2                                     u6161 1170  
                                   u6330 1408                                     u6250 154E  
                                   u6331 1404                                     u6251 154A  
                                   u6260 1764                                     u6340 1266  
                                   u6261 1760                                     u6341 1262  
                                   u6190 102E                                     u6174 119A  
                                   u6270 15C0                                     u6350 12AA  
                                   u6191 102A                                     u6175 1196  
                                   u6271 15BC                                     u6351 12A6  
                                   u6440 17A2                                     u6184 11F0  
                                   u6280 15E0                                     u6441 179E  
                                   u6185 11EC                                     u6281 15DC  
                                   u6290 1606                                     u6291 1602  
                                   u7867 12B0                                     u7877 12CA  
                                   u7887 12E0                                     u7897 177A  
                                   _TMR2 0FCC                                     _led2 005C  
                                   _led3 005B                                     _main 17DA  
                                   fsr2h 0FDA                                     indf2 0FDF  
                                   fsr1l 0FE1                                     fsr2l 0FD9  
                                   btemp 005D     __end_of_lcd_4bit_send_enable_signale 1792  
           _lcd_4bit_send_enable_signale 1754                                     prodl 0FF3  
                                   start 0026                             ___param_bank 0000  
                    _RB6_LOW_Int_APP_ISR 0000                _Interrupt_handler_RB4_LOW 0015  
              _Interrupt_handler_RB5_LOW 0013                _Interrupt_handler_RB6_LOW 0011  
              _Interrupt_handler_RB7_LOW 000F                     _gpio_pin_write_logic 1140  
                 _CCP1_INTERRUPT_HANDLER 0033                                    ?_main 0041  
                                  _EEADR 0FA9                                    _RCREG 0FAE  
                    relay_turn_off@F3742 003A                                    _TMR0H 0FD7  
                                  _TMR1H 0FCF                                    _TMR0L 0FD6  
                                  _TMR1L 0FCE                                    _TMR3H 0FB3  
                                  _TMR3L 0FB2                                    _SPBRG 0FAF  
                                  _PORTA 0F80                                    _PORTB 0F81  
                                  _PORTC 0F82                                    _PORTD 0F83  
                                  _TRISA 0F92                                    _TRISB 0F93  
                                  _TRISC 0F94                                    _TRISD 0F95  
                                  _TRISE 0F96                                    _TXREG 0FAD  
                                  _i2c_p 0131                                    _adc_1 00A2  
                                  _adc_2 009A                                    _adc_3 0092  
                                  _lcd_1 00F0                                    _lcd_2 0088  
                                  _servo 007E                                    tablat 0FF5  
                                  ttemp5 005E                                    ttemp6 0061  
                                  ttemp7 0065                                    status 0FD8  
                                  wtemp8 005E                         ??_MQ2_initialize 004D  
          ?_lcd_4bit_send_enable_signale 004A                          ??_lcd_send_4bit 004C  
                        __initialization 14BC                             __end_of_main 17E6  
                  ?_gpio_pin_write_logic 0042               _Interrupt_handler_RB4_HIGH 001D  
             _Interrupt_handler_RB5_HIGH 001B               _Interrupt_handler_RB6_HIGH 0019  
             _Interrupt_handler_RB7_HIGH 0017                                   ??_main 0052  
                    _RB7_LOW_Int_APP_ISR 0000                 _TIMER1_INTERRUPT_HANDLER 0009  
                          __activetblptr 0003                         led_turn_on@F3737 003F  
                  lcd_4_send_command@lcd 004D                    lcd_4_send_command@ret 004F  
                                 _ADRESH 0FC4                                   _EEADRH 0FAA  
                                 _ADRESL 0FC3                                   _EEDATA 0FA8  
                                 _CCPR1L 0FBE                                   _CCPR2L 0FBB  
                                 _EECON2 0FA7                                   i1l1709 001E  
                                 i2l1704 17F2                                   _SPBRGH 0FB0  
                                 _SSPADD 0FC8                                   _SSPBUF 0FC9  
                          _tris_register 0074                                   _US_pin 0144  
                       ??_ADC_initialize 004A                                   clear_0 1522  
                                 clear_1 152E                                   isa$std 0001  
                       lcd_send_4bit@lcd 004A                         lcd_send_4bit@ret 004C  
gpio_pin_direction_intialize@_pin_config 0042             _EUSART_Framing_Error_Handler 002B  
                ??_INTERRUPT_MANGER_HIGH 0041                             __pdataCOMRAM 0052  
                           __mediumconst 0000                                   tblptrh 0FF7  
                                 tblptrl 0FF6                                   tblptru 0FF8  
                  _ADC_INTERRUPT_HANDLER 0035             __end_of_select_result_format 1754  
                             __accesstop 0060                  __end_of__initialization 1534  
           __end_of_INTERRUPT_MANGER_LOW 0026                            ___rparam_used 0001  
             _I2C_Report_Write_Collision 0027                   ??_gpio_pin_write_logic 0044  
                         __pcstackCOMRAM 0041                             __pidataBANK0 1426  
                           __pidataBANK1 167E                           _select_voltage 16CE  
              lcd_4_send_command@command 004E                               __pbssBANK0 00F6  
                   relay_intialize@F3732 003C                   __end_of_select_voltage 1714  
                      led_turn_off@F3742 003E                        MQ2_initialize@ret 004D  
                   led_turn_toggle@F3747 003D                   relay_turn_toggle@F3747 0039  
                             _btn_values 1001                                  _KeyPad1 00B2  
                                __Hparam 0000               __end_of_lcd_4_send_command 167E  
                                __Lparam 0000                          ?_select_voltage 0042  
                                _lm35_mc 00AA                   _CCP2_INTERRUPT_HANDLER 0031  
                           __psmallconst 1000               __end_of_gpio_pin_intialize 1622  
                                __pcinit 14BC                                  _mq2_pin 00E7  
                   _select_result_format 1714                                  __ramtop 1000  
                                __ptext0 17DA                                  __ptext1 17C8  
                                __ptext2 1250                                  __ptext3 1622  
                                __ptext4 153E                                  __ptext5 1754  
                                __ptext6 15B0                                  __ptext7 1140  
                                __ptext8 1792                                  __ptext9 1340  
                              _T0CONbits 0FD5                                  _led_red 005A  
                             _eusart_pin 011B                     _INTERRUPT_MANGER_LOW 0018  
                              _T1CONbits 0FCD                                _T2CONbits 0FCA  
                              _T3CONbits 0FB1                                  _motor_1 0052  
                         __pintcode_body 17F2                     end_of_initialization 1534  
               select_result_format@_adc 0042                                  int_func 17F2  
                      ??_lcd_4_intialize 0051                    gpio_pin_intialize@ret 004C  
                      ADC_initialize@ret 004B                                _RCSTAbits 0FAB  
                  __end_of_lcd_send_4bit 15B0                                  postdec1 0FE5  
                                postdec2 0FDD                                  postinc0 0FEE  
                                postinc2 0FDE                    MQ2_initialize@mq2_obj 004C  
                  ?_select_result_format 0042                     lcd_send_4bit@command 004B  
                  ?_INTERRUPT_MANGER_LOW 0041                 _TIMER2_INTERRUPT_HANDLER 0005  
          gpio_pin_intialize@_pin_config 004A                     _RB4_HIGH_Int_APP_ISR 0000  
                           _INT0_APP_ISR 0000     __end_of_gpio_pin_direction_intialize 1140  
           _gpio_pin_direction_intialize 101A                             _INT1_APP_ISR 0000  
                              _TRISCbits 0F94            __end_of_INTERRUPT_MANGER_HIGH 17F6  
           _EUSART_Overrun_Error_Handler 00FE                             _INT2_APP_ISR 0000  
                  lcd_4_intialize@l_pins 014F                              _CCP1CONbits 0FBD  
                            _CCP2CONbits 0FBA                                _TXSTAbits 0FAC  
                     relay_turn_on@F3737 003B                       select_voltage@_adc 0042  
                            _BAUDCONbits 0FB8                            __pidataCOMRAM 17E6  
                         _timer0_preload 000B                           _timer1_preload 0007  
                         _timer2_preload 0038                      start_initialization 14BC  
                         _timer3_preload 0001            ?_gpio_pin_direction_intialize 0042  
                           _lat_register 006A                   ??_select_result_format 0043  
                            __pdataBANK0 0060                              __pdataBANK1 0100  
                 ??_INTERRUPT_MANGER_LOW 0041             __end_of_ecu_layer_initialize 17DA  
                            _rb4_int_obj 00CC                              _rb5_int_obj 00C6  
                            __pbssCOMRAM 0001                              _rb6_int_obj 00C0  
                          __pcstackBANK1 014F                              _rb7_int_obj 00BA  
                              _ccp_1_obj 0100          gpio_pin_direction_intialize@ret 0048  
                       ??_select_voltage 0043                     _RB5_HIGH_Int_APP_ISR 0000  
            _EUSART_Rx_Interrupt_Handler 002D                                __pintcode 0008  
        gpio_pin_write_logic@_pin_config 0042                              __pintcodelo 0018  
              gpio_pin_write_logic@logic 0043                   _Interrupt_handler_INT0 0023  
                 _Interrupt_handler_INT1 0021                   _Interrupt_handler_INT2 001F  
                              _led_green 0059           ??_lcd_4bit_send_enable_signale 004B  
                     _lcd_4_send_command 1622                              __smallconst 1000  
                        _lcd_4_intialize 1250                      ?_lcd_4_send_command 004D  
                     _gpio_pin_intialize 15B0           ??_gpio_pin_direction_intialize 0043  
                               _RB4_Flag 0057                                 _RB5_Flag 0056  
                               _RB6_Flag 0055                                 _RB7_Flag 0054  
                    ?_gpio_pin_intialize 004A                                 _IPR1bits 0F9F  
                               _IPR2bits 0FA2                                 _PIE1bits 0F9D  
                               _PIE2bits 0FA0                                 _PIR1bits 0F9E  
                               _PIR2bits 0FA1                                 _RCONbits 0FD0  
                   ??_lcd_4_send_command 004F                                _servo_pin 0058  
            _I2C_Report_Receive_Overflow 0025                           _MQ2_initialize 1792  
                             _ADCON0bits 0FC2                               _ADCON1bits 0FC1  
                             _ADCON2bits 0FC0                     ??_gpio_pin_intialize 004B  
                gpio_pin_write_logic@ret 0049                              _INTCON2bits 0FF1  
                            _INTCON3bits 0FF0                                copy_data0 14D0  
                              copy_data1 14F0                                copy_data2 1510  
                   _ecu_layer_initialize 17C8                               _EECON1bits 0FA6  
                               __Hrparam 0000                                 __Lrparam 0000  
                 __end_of_MQ2_initialize 17C8                       lcd_4_intialize@lcd 0050  
                     lcd_4_intialize@ret 0150                  __end_of_lcd_4_intialize 1340  
                     __end_of_btn_values 1011                 _TIMER0_INTERRUPT_HANDLER 000D  
               _TIMER3_INTERRUPT_HANDLER 0003                           _ADC_initialize 1340  
                   _RB6_HIGH_Int_APP_ISR 0000                                 __ptext10 16CE  
                               __ptext11 1714                                 __ptext12 101A  
        lcd_4bit_send_enable_signale@lcd 004A                                 _int0_obj 00DE  
                               _int1_obj 00D8                                 _int2_obj 00D2  
        lcd_4bit_send_enable_signale@ret 004B                    _INTERRUPT_MANGER_HIGH 0008  
                  ?_ecu_layer_initialize 0041                                 _buuton_1 00E4  
                               _int_flag 00F6                                 isa$xinst 0000  
                               int$flags 005D                          ?_MQ2_initialize 004C  
                 __end_of_ADC_initialize 1426                               _INTCONbits 0FF2  
                    _RB4_LOW_Int_APP_ISR 0000             __end_of_gpio_pin_write_logic 1250  
                  _I2C_INTERRUPT_HANDLER 0029                                 intlevel1 0000  
                               intlevel2 0000                       ADC_initialize@_adc 0049  
                          _lcd_send_4bit 153E                          ?_ADC_initialize 0049  
                       ?_lcd_4_intialize 0050                              _SSPCON1bits 0FC6  
                            _SSPCON2bits 0FC5                   ?_INTERRUPT_MANGER_HIGH 0041  
                 ??_ecu_layer_initialize 0052                            _port_register 0060  
                    _RB5_LOW_Int_APP_ISR 0000                     _RB7_HIGH_Int_APP_ISR 0000  
            _EUSART_Tx_Interrupt_Handler 002F  
